// –¢–µ—Å—Ç–æ–≤—ã–π —Å–∫—Ä–∏–ø—Ç –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è –±–∞–ª–∞–Ω—Å–∞
const createDatabase = require('./database-selector');

async function testBalanceFix() {
    console.log('üß™ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è –±–∞–ª–∞–Ω—Å–∞\n');
    
    const db = createDatabase();
    await new Promise(resolve => setTimeout(resolve, 1000));
    
    const YOUR_ID = 418684940;
    const TEST_IDS = [418684940, 999999999, 888888888];
    
    console.log('1Ô∏è‚É£ –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—É—â–µ—Å—Ç–≤—É—é—â–∏—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π:');
    console.log('‚îÅ'.repeat(60));
    
    for (const id of TEST_IDS) {
        const user = await db.getUser(id);
        if (user) {
            console.log(`‚úÖ ID ${id}: –Ω–∞–π–¥–µ–Ω, –±–∞–ª–∞–Ω—Å = ${user.stars} ‚≠ê`);
        } else {
            console.log(`‚ùå ID ${id}: –ù–ï –Ω–∞–π–¥–µ–Ω –≤ –ë–î`);
        }
    }
    
    console.log('\n2Ô∏è‚É£ –°–∏–º—É–ª–∏—Ä—É–µ–º –ø–µ—Ä–≤—ã–π –≤—Ö–æ–¥ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è:');
    console.log('‚îÅ'.repeat(60));
    
    // –°–∏–º—É–ª–∏—Ä—É–µ–º syncUserData –¥–ª—è –≤–∞—à–µ–≥–æ ID
    const syncUserData = async (userId, webAppData) => {
        console.log(`üîÑ syncUserData –¥–ª—è userId: ${userId}`);
        
        let user = await db.getUser(userId);
        
        if (!user) {
            console.log(`üë§ –°–æ–∑–¥–∞–µ–º –Ω–æ–≤–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è ${userId}`);
            
            const userData = {
                telegram_id: userId,
                username: webAppData?.username || '',
                first_name: webAppData?.first_name || '–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å',
                last_name: webAppData?.last_name || ''
            };
            
            await db.createUser(userData);
            user = await db.getUser(userId);
        }
        
        console.log(`‚úÖ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –∏–∑ –ë–î: ID=${user.telegram_id}, stars=${user.stars}`);
        
        return {
            stars: user.stars,
            referrals: user.referrals || 0,
            total_stars_earned: user.total_stars_earned || 20
        };
    };
    
    // –ü–µ—Ä–≤—ã–π –≤—Ö–æ–¥
    const result1 = await syncUserData(YOUR_ID, {
        username: 'testuser',
        first_name: 'Test',
        last_name: 'User'
    });
    console.log('üìä –†–µ–∑—É–ª—å—Ç–∞—Ç –ø–µ—Ä–≤–æ–≥–æ –≤—Ö–æ–¥–∞:', result1);
    
    console.log('\n3Ô∏è‚É£ –°–∏–º—É–ª–∏—Ä—É–µ–º –ø–æ–≤—Ç–æ—Ä–Ω—ã–π –≤—Ö–æ–¥:');
    console.log('‚îÅ'.repeat(60));
    
    // –ü–æ–≤—Ç–æ—Ä–Ω—ã–π –≤—Ö–æ–¥
    const result2 = await syncUserData(YOUR_ID, {
        username: 'testuser',
        first_name: 'Test',
        last_name: 'User'
    });
    console.log('üìä –†–µ–∑—É–ª—å—Ç–∞—Ç –ø–æ–≤—Ç–æ—Ä–Ω–æ–≥–æ –≤—Ö–æ–¥–∞:', result2);
    
    console.log('\n4Ô∏è‚É£ –°–∏–º—É–ª–∏—Ä—É–µ–º –≤—ã–∏–≥—Ä—ã—à 50 –∑–≤–µ–∑–¥:');
    console.log('‚îÅ'.repeat(60));
    
    await db.addUserStars(YOUR_ID, 50);
    console.log('‚úÖ –î–æ–±–∞–≤–ª–µ–Ω–æ 50 –∑–≤–µ–∑–¥');
    
    const userAfterWin = await db.getUser(YOUR_ID);
    console.log(`üìä –ë–∞–ª–∞–Ω—Å –ø–æ—Å–ª–µ –≤—ã–∏–≥—Ä—ã—à–∞: ${userAfterWin.stars} ‚≠ê`);
    
    console.log('\n5Ô∏è‚É£ –°–∏–º—É–ª–∏—Ä—É–µ–º –ø–µ—Ä–µ–∑–∞—Ö–æ–¥ –ø–æ—Å–ª–µ –≤—ã–∏–≥—Ä—ã—à–∞:');
    console.log('‚îÅ'.repeat(60));
    
    const result3 = await syncUserData(YOUR_ID, {
        username: 'testuser',
        first_name: 'Test',
        last_name: 'User'
    });
    console.log('üìä –†–µ–∑—É–ª—å—Ç–∞—Ç –ø–æ—Å–ª–µ –ø–µ—Ä–µ–∑–∞—Ö–æ–¥–∞:', result3);
    console.log(`‚úÖ –ë–∞–ª–∞–Ω—Å —Å–æ—Ö—Ä–∞–Ω–∏–ª—Å—è: ${result3.stars} ‚≠ê`);
    
    console.log('\n‚úÖ –¢–ï–°–¢ –ó–ê–í–ï–†–®–ï–ù');
    console.log('‚îÅ'.repeat(60));
    console.log('–í—ã–≤–æ–¥: –ï—Å–ª–∏ –±–∞–ª–∞–Ω—Å —Å–æ—Ö—Ä–∞–Ω—è–µ—Ç—Å—è –º–µ–∂–¥—É –≤—Ö–æ–¥–∞–º–∏,');
    console.log('—Ç–æ –ø—Ä–æ–±–ª–µ–º–∞ –≤ —Ç–æ–º, —á—Ç–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ —Å–æ—Ö—Ä–∞–Ω—è–µ—Ç—Å—è –≤ –ø—Ä–æ–¥–∞–∫—à–Ω –ë–î.');
    
    process.exit(0);
}

testBalanceFix();