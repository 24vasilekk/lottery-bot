// public/js/app.js - –ò–°–ü–†–ê–í–õ–ï–ù–ù–ê–Ø –í–ï–†–°–ò–Ø –° –†–ê–ë–û–ß–ò–ú –õ–ò–î–ï–†–ë–û–†–î–û–ú

import { APP_CONFIG, WHEEL_PRIZES, DEFAULT_USER_DATA } from './config.js';
import { MainScreen } from './screens/main.js';
import { TasksScreen } from './screens/tasks.js';
import { ProfileScreen } from './screens/profile.js';
import { DepositScreen } from './screens/deposit.js';

// DEFAULT_USER_DATA —Ç–µ–ø–µ—Ä—å –∏–º–ø–æ—Ä—Ç–∏—Ä—É–µ—Ç—Å—è –∏–∑ config.js

export default class App {
    constructor() {
        console.log('üöÄ –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è Kosmetichka App...');
        
        this.gameData = null;
        this.screens = {};
        this.navigation = null;
        this.tg = null;
        
        // –ë–ª–æ–∫–∏—Ä–æ–≤–∫–∞ –æ–ø–µ—Ä–∞—Ü–∏–π —Å –±–∞–ª–∞–Ω—Å–æ–º –¥–ª—è –ø—Ä–µ–¥–æ—Ç–≤—Ä–∞—â–µ–Ω–∏—è race conditions
        this.balanceOperationInProgress = false;
        this.pendingBalanceOperations = [];
        
        // Telegram WebApp –±—É–¥–µ—Ç –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω –≤ telegram-integration.js
        
        console.log('üì± App —Å–æ–∑–¥–∞–Ω');
    }

    async init() {
        try {
            console.log('üîß –ó–∞–ø—É—Å–∫ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è...');
            
            // 1. –ó–∞–≥—Ä—É–∂–∞–µ–º –¥–∞–Ω–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
            this.loadGameData();
            
            // 2. –°–æ–∑–¥–∞–µ–º –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å
            await this.createInterface();
            
            // 3. –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º –Ω–∞–≤–∏–≥–∞—Ü–∏—é
            this.initNavigation();
            
            // 4. –ó–∞–≥—Ä—É–∂–∞–µ–º —ç–∫—Ä–∞–Ω—ã
            await this.loadScreens();
            
            // 5. –ù–∞—Å—Ç—Ä–∞–∏–≤–∞–µ–º –≥–ª–æ–±–∞–ª—å–Ω—ã–µ –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏
            this.setupGlobalHandlers();
            
            // 6. –û–±–Ω–æ–≤–ª—è–µ–º –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å
            this.updateInterface();
            
            // 7. –ü–æ–ª—É—á–∞–µ–º —Å—Å—ã–ª–∫—É –Ω–∞ Telegram WebApp –∏ —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∏—Ä—É–µ–º
            if (window.telegramIntegration) {
                this.tg = window.telegramIntegration.tg;
                console.log('üîÑ –î–ò–ê–ì–ù–û–°–¢–ò–ö–ê: –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏ —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏—è...');
                
                // –õ–æ–≥–∏—Ä—É–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ –¥–æ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏
                console.log('üìä –î–ò–ê–ì–ù–û–°–¢–ò–ö–ê: –ë–∞–ª–∞–Ω—Å –î–û –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏:', this.gameData.stars);
                
                // –°–Ω–∞—á–∞–ª–∞ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
                console.log('üë§ –î–ò–ê–ì–ù–û–°–¢–ò–ö–ê: –í—ã–∑—ã–≤–∞–µ–º initUser...');
                window.telegramIntegration.initUser();
                
                // –õ–æ–≥–∏—Ä—É–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ –ø–æ—Å–ª–µ initUser
                console.log('üìä –î–ò–ê–ì–ù–û–°–¢–ò–ö–ê: –ë–∞–ª–∞–Ω—Å –ü–û–°–õ–ï initUser:', this.gameData.stars);
                
                // –ó–∞—Ç–µ–º —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∏—Ä—É–µ–º —Å —Å–µ—Ä–≤–µ—Ä–æ–º
                console.log('üîÑ –î–ò–ê–ì–ù–û–°–¢–ò–ö–ê: –í—ã–∑—ã–≤–∞–µ–º syncWithServer...');
                await window.telegramIntegration.syncWithServer();
                
                // –õ–æ–≥–∏—Ä—É–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ –ø–æ—Å–ª–µ —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏–∏ —Å —Å–µ—Ä–≤–µ—Ä–æ–º
                console.log('üìä –î–ò–ê–ì–ù–û–°–¢–ò–ö–ê: –ë–∞–ª–∞–Ω—Å –ü–û–°–õ–ï syncWithServer:', this.gameData.stars);
                console.log('üìä –î–ò–ê–ì–ù–û–°–¢–ò–ö–ê: –ü–æ–ª–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ –ø–æ—Å–ª–µ —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏–∏:', this.gameData);
            }
            
            // 8. –°–∫—Ä—ã–≤–∞–µ–º –∑–∞–≥—Ä—É–∑–æ—á–Ω—ã–π —ç–∫—Ä–∞–Ω
            this.hideLoadingScreen();
            
            console.log('‚úÖ –ü—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –ø–æ–ª–Ω–æ—Å—Ç—å—é –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–æ!');
            
        } catch (error) {
            console.error('‚ùå –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏:', error);
            this.handleError(error);
        }
    }

    loadGameData() {
        console.log('üíæ –ó–∞–≥—Ä—É–∑–∫–∞ –¥–∞–Ω–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è...');

        try {
            // –ò–°–ü–†–ê–í–õ–ï–ù–û: –°–æ–∑–¥–∞–µ–º –º–∏–Ω–∏–º–∞–ª—å–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ –ë–ï–ó –Ω–∞—á–∞–ª—å–Ω–æ–≥–æ –±–∞–ª–∞–Ω—Å–∞
            this.gameData = {
                // –ù–ï –∑–∞–¥–∞–µ–º stars –∑–¥–µ—Å—å - –±—É–¥–µ—Ç –∑–∞–≥—Ä—É–∂–µ–Ω–æ –∏–∑ –ë–î
                stars: 0, // –í—Ä–µ–º–µ–Ω–Ω–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ –¥–æ —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏–∏ —Å –ë–î
                recentWins: [],
                completedTasks: [],
                availableFriendSpins: 1,
                profile: { name: '–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å', avatar: 'üë§', joinDate: Date.now() },
                settings: { notifications: true, sounds: true, animations: true },
                // –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ - –±—É–¥–µ—Ç –∑–∞–≥—Ä—É–∂–µ–Ω–∞ –∏–∑ –ë–î
                totalStarsEarned: 0,
                referrals: 0,
                totalSpins: 0,
                prizesWon: 0
            };
            console.log('üÜï –ú–∏–Ω–∏–º–∞–ª—å–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è —Å–æ–∑–¥–∞–Ω—ã (–ë–ï–ó –Ω–∞—á–∞–ª—å–Ω–æ–≥–æ –±–∞–ª–∞–Ω—Å–∞)');
            
            // –ü–æ–ø—ã—Ç–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –∏–∑ localStorage (—Ç–æ–ª—å–∫–æ –¥–ª—è –Ω–µ–∫—Ä–∏—Ç–∏—á–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö)
            const saved = localStorage.getItem('kosmetichkaGameData');
            if (saved) {
                const savedData = JSON.parse(saved);
                // –û–±—ä–µ–¥–∏–Ω—è–µ–º —Ç–æ–ª—å–∫–æ –Ω–µ–∫—Ä–∏—Ç–∏—á–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ, –∫—Ä–∏—Ç–∏—á–Ω—ã–µ (–∑–≤–µ–∑–¥—ã, —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞) –±–µ—Ä–µ–º –∏–∑ –ë–î
                this.gameData = {
                    ...this.gameData,
                    recentWins: savedData.recentWins || [],
                    completedTasks: savedData.completedTasks || [],
                    profile: savedData.profile || this.gameData.profile,
                    settings: savedData.settings || this.gameData.settings
                    // –ù–ï –±–µ—Ä–µ–º stars, totalStarsEarned –∏ –¥—Ä—É–≥—É—é –∫—Ä–∏—Ç–∏—á–Ω—É—é —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É –∏–∑ localStorage!
                };
                console.log('üíæ –ù–µ–∫—Ä–∏—Ç–∏—á–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã –∏–∑ localStorage');
            }
            
            // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã—Ö –ø–æ–ª–µ–π (–ø—Ä–æ–≤–µ—Ä—è–µ–º —á—Ç–æ –≤—Å–µ –µ—Å—Ç—å)
            if (!this.gameData.recentWins) this.gameData.recentWins = [];
            if (!this.gameData.completedTasks) this.gameData.completedTasks = [];
            if (!this.gameData.availableFriendSpins) this.gameData.availableFriendSpins = 1;
            if (!this.gameData.profile) this.gameData.profile = { name: '–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å', avatar: 'üë§', joinDate: Date.now() };
            if (!this.gameData.referrals) this.gameData.referrals = 0;
            if (!this.gameData.prizesWon) this.gameData.prizesWon = 0;
            
            // –í–ê–ñ–ù–û: –ù–ï –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º totalStarsEarned –∑–¥–µ—Å—å - —Ç–æ–ª—å–∫–æ –∏–∑ –ë–î
            console.log('‚ö†Ô∏è –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –∑–∞–≤–µ—Ä—à–µ–Ω–∞. –û–∂–∏–¥–∞–µ–º –¥–∞–Ω–Ω—ã–µ –∏–∑ –ë–î –¥–ª—è –±–∞–ª–∞–Ω—Å–∞...');
            
        } catch (error) {
            console.error('‚ùå –û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –¥–∞–Ω–Ω—ã—Ö:', error);
            this.gameData = { ...DEFAULT_USER_DATA };
        }
    }

    async createInterface() {
        const app = document.getElementById('app');
        if (!app) {
            throw new Error('–ö–æ–Ω—Ç–µ–π–Ω–µ—Ä –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è –Ω–µ –Ω–∞–π–¥–µ–Ω');
        }

        app.innerHTML = `
            <!-- –ö–æ–Ω—Ç–µ–π–Ω–µ—Ä –¥–ª—è —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π - –í–í–ï–†–•–£ -->
            <div id="status-messages" class="status-messages-container"></div>
            
            <!-- –ö–æ–Ω—Ç–µ–π–Ω–µ—Ä —ç–∫—Ä–∞–Ω–æ–≤ -->
            <div id="screens-container"></div>
            
            <!-- –ù–ò–ñ–ù–Ø–Ø –ù–ê–í–ò–ì–ê–¶–ò–Ø - –í–°–ï–ì–î–ê –ó–ê–ö–†–ï–ü–õ–ï–ù–ê -->
            <nav id="bottom-navigation" class="bottom-navigation">
                <button class="nav-btn active" data-screen="main" aria-label="–ì–ª–∞–≤–Ω–∞—è —Å—Ç—Ä–∞–Ω–∏—Ü–∞">
                    <i class="fas fa-home"></i>
                    <span>–ì–ª–∞–≤–Ω–∞—è</span>
                </button>
                <button class="nav-btn" data-screen="tasks" aria-label="–ó–∞–¥–∞–Ω–∏—è">
                    <i class="fas fa-tasks"></i>
                    <span>–ó–∞–¥–∞–Ω–∏—è</span>
                    <div class="nav-badge" id="tasks-badge" style="display: none;"></div>
                </button>
                <button class="nav-btn" data-screen="profile" aria-label="–ü—Ä–æ—Ñ–∏–ª—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è">
                    <i class="fas fa-user"></i>
                    <span>–ü—Ä–æ—Ñ–∏–ª—å</span>
                </button>
            </nav>
        `;

        console.log('üñºÔ∏è –ò–Ω—Ç–µ—Ä—Ñ–µ–π—Å —Å–æ–∑–¥–∞–Ω');
    }

    initNavigation() {
        this.navigation = {
            currentScreen: 'main',
            navigateTo: (screenName) => {
                console.log(`üß≠ –ü–µ—Ä–µ—Ö–æ–¥ –Ω–∞ —ç–∫—Ä–∞–Ω: ${screenName}`);
                
                // –í–∞–ª–∏–¥–∞—Ü–∏—è —ç–∫—Ä–∞–Ω–∞
                const validScreens = ['main', 'tasks', 'profile', 'deposit', 'mega-roulette'];
                if (!validScreens.includes(screenName)) {
                    console.error(`‚ùå –ù–µ–∏–∑–≤–µ—Å—Ç–Ω—ã–π —ç–∫—Ä–∞–Ω: ${screenName}`);
                    return;
                }
                
                // –°–ø–µ—Ü–∏–∞–ª—å–Ω–∞—è –æ–±—Ä–∞–±–æ—Ç–∫–∞ –¥–ª—è –º–µ–≥–∞ —Ä—É–ª–µ—Ç–∫–∏
                if (screenName === 'mega-roulette') {
                    this.renderMegaRoulette();
                } else {
                    // –£–±–∏—Ä–∞–µ–º –º–µ–≥–∞ —Ä—É–ª–µ—Ç–∫—É –µ—Å–ª–∏ –æ–Ω–∞ –±—ã–ª–∞ –ø–æ–∫–∞–∑–∞–Ω–∞
                    this.removeMegaRoulette();
                    
                    // –°–∫—Ä—ã–≤–∞–µ–º –≤—Å–µ –æ–±—ã—á–Ω—ã–µ —ç–∫—Ä–∞–Ω—ã
                    document.querySelectorAll('.screen:not(#mega-roulette-screen)').forEach(screen => {
                        screen.classList.remove('active');
                    });
                    
                    // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –Ω—É–∂–Ω—ã–π —ç–∫—Ä–∞–Ω
                    const targetScreen = document.getElementById(`${screenName}-screen`);
                    if (targetScreen) {
                        targetScreen.classList.add('active');
                        this.navigation.currentScreen = screenName;
                    
                    // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º —ç–∫—Ä–∞–Ω –µ—Å–ª–∏ –Ω—É–∂–Ω–æ
                    // –ú–∞–ø–ø–∏–Ω–≥ –∏–º–µ–Ω —ç–∫—Ä–∞–Ω–æ–≤ –¥–ª—è camelCase
                    const screenMapping = {
                        'main': 'main',
                        'tasks': 'tasks', 
                        'profile': 'profile',
                        'deposit': 'deposit',
                        'mega-roulette': 'megaRoulette'
                    };
                    
                    const screenKey = screenMapping[screenName] || screenName;
                    if (this.screens[screenKey] && this.screens[screenKey].init) {
                        this.screens[screenKey].init();
                    }
                    // –°–ø–µ—Ü–∏–∞–ª—å–Ω–∞—è –æ–±—Ä–∞–±–æ—Ç–∫–∞ –¥–ª—è –ø—Ä–æ—Ñ–∏–ª—è - –ø–µ—Ä–µ–∑–∞–≥—Ä—É–∂–∞–µ–º –¥–∞–Ω–Ω—ã–µ
                    // –ó–ê–ú–ï–ù–ò–¢–¨ –ù–ê:
                    // –°–ø–µ—Ü–∏–∞–ª—å–Ω–∞—è –æ–±—Ä–∞–±–æ—Ç–∫–∞ –¥–ª—è —Ä–∞–∑–Ω—ã—Ö —ç–∫—Ä–∞–Ω–æ–≤
                    if (screenName === 'profile' && this.screens.profile && this.screens.profile.loadProfileData) {
                        setTimeout(() => {
                            this.screens.profile.loadProfileData();
                            console.log('üîÑ –î–∞–Ω–Ω—ã–µ –ø—Ä–æ—Ñ–∏–ª—è –ø–µ—Ä–µ–∑–∞–≥—Ä—É–∂–µ–Ω—ã –ø—Ä–∏ –Ω–∞–≤–∏–≥–∞—Ü–∏–∏');
                        }, 200);
                    }

                    // –î–û–ë–ê–í–ò–¢–¨ —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏—é –¥–ª—è –∑–∞–¥–∞–Ω–∏–π
                    if (screenName === 'tasks' && this.screens.tasks) {
                        setTimeout(() => {
                            // –ü—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ –æ–±–Ω–æ–≤–ª—è–µ–º –¥–∞–Ω–Ω—ã–µ –≤ –∑–∞–¥–∞–Ω–∏—è—Ö
                            if (window.telegramIntegration && window.telegramIntegration.syncWithServer) {
                                window.telegramIntegration.syncWithServer();
                            }
                            console.log('üîÑ –î–∞–Ω–Ω—ã–µ –∑–∞–¥–∞–Ω–∏–π —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∏—Ä–æ–≤–∞–Ω—ã');
                        }, 300);
                    }

                    // –í—Å–µ–≥–¥–∞ –æ–±–Ω–æ–≤–ª—è–µ–º –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å –ø–æ—Å–ª–µ —Å–º–µ–Ω—ã —ç–∫—Ä–∞–Ω–∞
                    setTimeout(() => {
                        this.updateInterface();
                    }, 500);
                    
                    // –ü—Ä–æ–∫—Ä—É—Ç–∫–∞ –Ω–∞–≤–µ—Ä—Ö –ø—Ä–∏ –ø–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏–∏ —ç–∫—Ä–∞–Ω–æ–≤
                    targetScreen.scrollTop = 0;
                    } else {
                        console.error(`‚ùå –≠–∫—Ä–∞–Ω ${screenName} –Ω–µ –Ω–∞–π–¥–µ–Ω`);
                        return;
                    }
                }
                
                // –û–±–Ω–æ–≤–ª—è–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ –Ω–∞–≤–∏–≥–∞—Ü–∏–∏
                this.updateNavigationState(screenName);
            }
        };

        // –û–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –∫–Ω–æ–ø–æ–∫ –Ω–∞–≤–∏–≥–∞—Ü–∏–∏
        setTimeout(() => {
            document.querySelectorAll('.nav-btn').forEach(btn => {
                btn.addEventListener('click', (e) => {
                    e.preventDefault();
                    e.stopPropagation();
                    
                    const screen = btn.dataset.screen;
                    if (screen && screen !== this.navigation.currentScreen) {
                        this.navigation.navigateTo(screen);
                    }
                });
                
                // –ü–æ–¥–¥–µ—Ä–∂–∫–∞ –∫–ª–∞–≤–∏–∞—Ç—É—Ä–Ω–æ–π –Ω–∞–≤–∏–≥–∞—Ü–∏–∏
                btn.addEventListener('keydown', (e) => {
                    if (e.key === 'Enter' || e.key === ' ') {
                        e.preventDefault();
                        const screen = btn.dataset.screen;
                        if (screen && screen !== this.navigation.currentScreen) {
                            this.navigation.navigateTo(screen);
                        }
                    }
                });
            });
        }, 100);
        
        console.log('‚úÖ –ù–∞–≤–∏–≥–∞—Ü–∏—è –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–∞');
    }

    updateNavigationState(activeScreen) {
        // –û–±–Ω–æ–≤–ª—è–µ–º –∞–∫—Ç–∏–≤–Ω—É—é –∫–Ω–æ–ø–∫—É
        document.querySelectorAll('.nav-btn').forEach(btn => {
            btn.classList.remove('active');
            
            if (btn.dataset.screen === activeScreen) {
                btn.classList.add('active');
            }
        });
        
        // –û–±–Ω–æ–≤–ª—è–µ–º –∑–∞–≥–æ–ª–æ–≤–æ–∫ —Å—Ç—Ä–∞–Ω–∏—Ü—ã
        const screenTitles = {
            'main': 'Kosmetichka - –†—É–ª–µ—Ç–∫–∞ –∫—Ä–∞—Å–æ—Ç—ã',
            'tasks': 'Kosmetichka - –ó–∞–¥–∞–Ω–∏—è',
            'profile': 'Kosmetichka - –ü—Ä–æ—Ñ–∏–ª—å',
            'deposit': 'Kosmetichka - –ü–æ–ø–æ–ª–Ω–µ–Ω–∏–µ',
            'mega-roulette': 'Kosmetichka - –ú–µ–≥–∞ —Ä—É–ª–µ—Ç–∫–∞'
        };
        
        if (screenTitles[activeScreen]) {
            document.title = screenTitles[activeScreen];
        }
    }

    async loadScreens() {
        try {
            console.log('üì± –ó–∞–≥—Ä—É–∑–∫–∞ —ç–∫—Ä–∞–Ω–æ–≤...');
            
            const container = document.getElementById('screens-container');
            if (!container) {
                throw new Error('–ö–æ–Ω—Ç–µ–π–Ω–µ—Ä —ç–∫—Ä–∞–Ω–æ–≤ –Ω–µ –Ω–∞–π–¥–µ–Ω');
            }

            // –û–°–ù–û–í–ù–´–ï –≠–ö–†–ê–ù–´
            console.log('üìÑ –°–æ–∑–¥–∞–Ω–∏–µ –æ—Å–Ω–æ–≤–Ω—ã—Ö —ç–∫—Ä–∞–Ω–æ–≤...');
            this.screens.main = new MainScreen(this);
            this.screens.tasks = new TasksScreen(this);
            this.screens.profile = new ProfileScreen(this); // –ì–ª–æ–±–∞–ª—å–Ω–∞—è —Å—Å—ã–ª–∫–∞ —É—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ—Ç—Å—è –≤ –∫–æ–Ω—Å—Ç—Ä—É–∫—Ç–æ—Ä–µ
            this.screens.deposit = new DepositScreen(this);
            
            console.log('‚úÖ –û—Å–Ω–æ–≤–Ω—ã–µ —ç–∫—Ä–∞–Ω—ã —Å–æ–∑–¥–∞–Ω—ã');
            console.log('üîó –ü—Ä–æ–≤–µ—Ä—è–µ–º –≥–ª–æ–±–∞–ª—å–Ω—É—é —Å—Å—ã–ª–∫—É profileScreen:', window.profileScreen);

            // –î–û–ü–û–õ–ù–ò–¢–ï–õ–¨–ù–´–ï –≠–ö–†–ê–ù–´ (–Ω–µ–æ–±—è–∑–∞—Ç–µ–ª—å–Ω—ã–µ)
            try {
                console.log('üé∞ –ü–æ–ø—ã—Ç–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –º–µ–≥–∞ —Ä—É–ª–µ—Ç–∫–∏...');
                const megaModule = await import('./screens/mega-roulette.js');
                if (megaModule.MegaRouletteScreen) {
                    this.screens.megaRoulette = new megaModule.MegaRouletteScreen(this);
                    console.log('‚úÖ –ú–µ–≥–∞ —Ä—É–ª–µ—Ç–∫–∞ –∑–∞–≥—Ä—É–∂–µ–Ω–∞');
                }
            } catch (megaError) {
                console.warn('‚ö†Ô∏è –ú–µ–≥–∞ —Ä—É–ª–µ—Ç–∫–∞ –Ω–µ–¥–æ—Å—Ç—É–ø–Ω–∞:', megaError.message);
            }

            // –†–µ–Ω–¥–µ—Ä–∏–º –æ—Å–Ω–æ–≤–Ω—ã–µ —ç–∫—Ä–∞–Ω—ã (–∫—Ä–æ–º–µ –º–µ–≥–∞ —Ä—É–ª–µ—Ç–∫–∏ - –æ–Ω–∞ —Ä–µ–Ω–¥–µ—Ä–∏—Ç—Å—è –æ—Ç–¥–µ–ª—å–Ω–æ)
            const screensHTML = [];
            
            if (this.screens.main) screensHTML.push(this.screens.main.render());
            if (this.screens.tasks) screensHTML.push(this.screens.tasks.render());
            if (this.screens.profile) screensHTML.push(this.screens.profile.render());
            if (this.screens.deposit) screensHTML.push(this.screens.deposit.render());
            // –ú–µ–≥–∞ —Ä—É–ª–µ—Ç–∫–∞ –ù–ï —Ä–µ–Ω–¥–µ—Ä–∏—Ç—Å—è –∑–¥–µ—Å—å - —Ç–æ–ª—å–∫–æ –ø—Ä–∏ –ø–µ—Ä–µ—Ö–æ–¥–µ –Ω–∞ –Ω–µ—ë
            
            container.innerHTML = screensHTML.join('');

            // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º –∞–∫—Ç–∏–≤–Ω—ã–π —ç–∫—Ä–∞–Ω
            if (this.screens.main) {
                this.screens.main.init();
            }

            // –í–ê–ñ–ù–û: –î—É–±–ª–∏—Ä—É–µ–º –ø—Ä–æ–≤–µ—Ä–∫—É –≥–ª–æ–±–∞–ª—å–Ω–æ–π —Å—Å—ã–ª–∫–∏ –ø–æ—Å–ª–µ —Ä–µ–Ω–¥–µ—Ä–∞
            if (!window.profileScreen && this.screens.profile) {
                window.profileScreen = this.screens.profile;
                console.log('üîó –ì–ª–æ–±–∞–ª—å–Ω–∞—è —Å—Å—ã–ª–∫–∞ profileScreen —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∞ –ø–æ—Å–ª–µ —Ä–µ–Ω–¥–µ—Ä–∞');
            }

            console.log('‚úÖ –í—Å–µ —ç–∫—Ä–∞–Ω—ã –∑–∞–≥—Ä—É–∂–µ–Ω—ã –∏ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω—ã');

        } catch (error) {
            console.error('‚ùå –û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ —ç–∫—Ä–∞–Ω–æ–≤:', error);
            throw error;
        }
    }

    setupGlobalHandlers() {
        // –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –æ—à–∏–±–æ–∫
        window.addEventListener('error', (event) => {
            console.error('üö® –ì–ª–æ–±–∞–ª—å–Ω–∞—è –æ—à–∏–±–∫–∞:', event.error);
            this.handleError(event.error);
        });

        window.addEventListener('unhandledrejection', (event) => {
            console.error('üö® –ù–µ–æ–±—Ä–∞–±–æ—Ç–∞–Ω–Ω–æ–µ –æ—Ç–∫–ª–æ–Ω–µ–Ω–∏–µ –ø—Ä–æ–º–∏—Å–∞:', event.reason);
            this.handleError(event.reason);
        });

        // –°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö –ø—Ä–∏ –∑–∞–∫—Ä—ã—Ç–∏–∏
        window.addEventListener('beforeunload', () => {
            this.saveGameData();
        });

        // –û–±—Ä–∞–±–æ—Ç–∫–∞ –∏–∑–º–µ–Ω–µ–Ω–∏—è –≤–∏–¥–∏–º–æ—Å—Ç–∏
        document.addEventListener('visibilitychange', () => {
            if (document.hidden) {
                this.saveGameData();
            }
        });

        // –ü—Ä–µ–¥–æ—Ç–≤—Ä–∞—â–µ–Ω–∏–µ —Å–ª—É—á–∞–π–Ω–æ–≥–æ –∑–∞–∫—Ä—ã—Ç–∏—è –Ω–∞ –º–æ–±–∏–ª—å–Ω—ã—Ö
        if (this.tg) {
            this.tg.onEvent('back_button_pressed', () => {
                if (this.navigation.currentScreen !== 'main') {
                    this.navigation.navigateTo('main');
                    return true;
                }
                return false;
            });
        }

        console.log('üõ°Ô∏è –ì–ª–æ–±–∞–ª—å–Ω—ã–µ –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –Ω–∞—Å—Ç—Ä–æ–µ–Ω—ã');
    }

    updateInterface() {
        console.log('üîÑ –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–∞...');
        
        // 1. –û–±–Ω–æ–≤–ª—è–µ–º –æ—Å–Ω–æ–≤–Ω—ã–µ —Å—á–µ—Ç—á–∏–∫–∏ –∑–≤–µ–∑–¥
        this.updateStarsDisplay();
        
        // 2. –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –∏–º–µ–Ω–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        const userName = document.querySelector('.user-name');
        if (userName && this.tg?.initDataUnsafe?.user?.first_name) {
            userName.textContent = this.tg.initDataUnsafe.user.first_name;
        }

        // 3. –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –∞–≤–∞—Ç–∞—Ä–∫–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        this.updateUserAvatar();

        // 4. –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –±–µ–π–¥–∂–∞ –∑–∞–¥–∞–Ω–∏–π
        this.updateTasksBadge();
        
        // 5. –û–±–Ω–æ–≤–ª—è–µ–º –≤—Å–µ —ç–∫—Ä–∞–Ω—ã
        try {
            // –ì–ª–∞–≤–Ω—ã–π —ç–∫—Ä–∞–Ω - –æ–±–Ω–æ–≤–ª—è–µ–º –∫–Ω–æ–ø–∫–∏ –ø—Ä–æ–∫—Ä—É—Ç–∫–∏
            if (this.screens.main && this.screens.main.updateSpinButtons) {
                this.screens.main.updateSpinButtons();
                console.log('‚úÖ –ì–ª–∞–≤–Ω—ã–π —ç–∫—Ä–∞–Ω –æ–±–Ω–æ–≤–ª–µ–Ω');
            }
            
            // –ü—Ä–æ—Ñ–∏–ª—å - –æ–±–Ω–æ–≤–ª—è–µ–º —Å–µ–∫—Ü–∏—é —Ä–µ—Ñ–µ—Ä–∞–ª–æ–≤
            if (this.screens.profile && this.screens.profile.updateReferralsSection) {
                this.screens.profile.updateReferralsSection();
                console.log('‚úÖ –ü—Ä–æ—Ñ–∏–ª—å –æ–±–Ω–æ–≤–ª–µ–Ω');
            }
            
            // –ó–∞–¥–∞–Ω–∏—è - –æ–±–Ω–æ–≤–ª—è–µ–º —Å—á–µ—Ç—á–∏–∫–∏
            if (this.screens.tasks && this.screens.tasks.updateTaskCounter) {
                this.screens.tasks.updateTaskCounter();
                console.log('‚úÖ –ó–∞–¥–∞–Ω–∏—è –æ–±–Ω–æ–≤–ª–µ–Ω—ã');
            }
            
            // –ú–µ–≥–∞ —Ä—É–ª–µ—Ç–∫–∞ - –æ–±–Ω–æ–≤–ª—è–µ–º –µ—Å–ª–∏ –∞–∫—Ç–∏–≤–Ω–∞
            if (this.screens.megaRoulette && this.screens.megaRoulette.updateInterface) {
                this.screens.megaRoulette.updateInterface();
                console.log('‚úÖ –ú–µ–≥–∞ —Ä—É–ª–µ—Ç–∫–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∞');
            }
            
            
        } catch (error) {
            console.warn('‚ö†Ô∏è –û—à–∏–±–∫–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è —ç–∫—Ä–∞–Ω–æ–≤:', error);
        }
        
        // 6. –û–±–Ω–æ–≤–ª—è–µ–º –≤—Å–µ —ç–ª–µ–º–µ–Ω—Ç—ã —Å–æ –∑–≤–µ–∑–¥–∞–º–∏ –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü–µ
        try {
            const starsElements = document.querySelectorAll('[data-stars], .stars-count, .user-stars');
            starsElements.forEach(el => {
                if (el && this.gameData.stars !== undefined) {
                    el.textContent = this.gameData.stars;
                }
            });
            
            // –û–±–Ω–æ–≤–ª—è–µ–º —Å—á–µ—Ç—á–∏–∫–∏ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏
            const statsElements = {
                'total-spins': this.gameData.totalSpins || 0,
                'prizes-won': this.gameData.prizesWon || 0,
                'referrals-count': this.gameData.referrals || 0,
                'total-earned': this.gameData.totalStarsEarned || 0
            };
            
            Object.entries(statsElements).forEach(([id, value]) => {
                const element = document.getElementById(id);
                if (element) {
                    element.textContent = value;
                }
            });
            
        } catch (error) {
            console.warn('‚ö†Ô∏è –û—à–∏–±–∫–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è —ç–ª–µ–º–µ–Ω—Ç–æ–≤ –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–∞:', error);
        }

        console.log('‚úÖ –ò–Ω—Ç–µ—Ä—Ñ–µ–π—Å –ø–æ–ª–Ω–æ—Å—Ç—å—é –æ–±–Ω–æ–≤–ª–µ–Ω:', {
            stars: this.gameData.stars,
            referrals: this.gameData.referrals,
            totalSpins: this.gameData.totalSpins,
            prizesWon: this.gameData.prizesWon
        });
    }

    // –í—Å–ø–æ–º–æ–≥–∞—Ç–µ–ª—å–Ω—ã–π –º–µ—Ç–æ–¥ –¥–ª—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è –∑–≤–µ–∑–¥
    updateStarsDisplay() {
        try {
            // –£–õ–£–ß–®–ï–ù–ù–ê–Ø –æ–±—Ä–∞–±–æ—Ç–∫–∞ –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è –±–∞–ª–∞–Ω—Å–∞
            const displayValue = this.gameData.stars !== undefined && this.gameData.stars !== null 
                ? this.gameData.stars.toLocaleString() 
                : '‚è≥'; // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º "‚è≥" –ø–æ–∫–∞ –¥–∞–Ω–Ω—ã–µ –Ω–µ –∑–∞–≥—Ä—É–∑–∏–ª–∏—Å—å
            
            // –û—Å–Ω–æ–≤–Ω–æ–π —Å—á–µ—Ç—á–∏–∫ –∑–≤–µ–∑–¥
            const starCount = document.getElementById('star-count');
            if (starCount) {
                starCount.textContent = displayValue;
            }
            
            // –í—Å–µ —ç–ª–µ–º–µ–Ω—Ç—ã —Å –∫–ª–∞—Å—Å–æ–º stars
            const starsElements = document.querySelectorAll('.stars-value, .current-stars, .star-balance');
            starsElements.forEach(el => {
                if (el) {
                    el.textContent = displayValue;
                }
            });
            
            // –û–±–Ω–æ–≤–ª—è–µ–º —ç–ª–µ–º–µ–Ω—Ç—ã —Å data-stars –∞—Ç—Ä–∏–±—É—Ç–æ–º
            const dataStarsElements = document.querySelectorAll('[data-stars]');
            dataStarsElements.forEach(el => {
                if (el) {
                    el.textContent = displayValue;
                }
            });
            
            console.log(`üí∞ –û–±–Ω–æ–≤–ª–µ–Ω–æ –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ –∑–≤–µ–∑–¥: ${this.gameData.stars} (–æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ: ${displayValue})`);
            
        } catch (error) {
            console.warn('‚ö†Ô∏è –û—à–∏–±–∫–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è –∑–≤–µ–∑–¥:', error);
        }
    }

    // –í—Å–ø–æ–º–æ–≥–∞—Ç–µ–ª—å–Ω—ã–π –º–µ—Ç–æ–¥ –¥–ª—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –±–µ–π–¥–∂–∞ –∑–∞–¥–∞–Ω–∏–π
    updateTasksBadge() {
        try {
            const taskBadge = document.getElementById('tasks-badge');
            if (taskBadge && this.screens.tasks) {
                const availableTasks = this.screens.tasks.getAvailableTasksCount ? 
                    this.screens.tasks.getAvailableTasksCount() : 0;
                
                if (availableTasks > 0) {
                    taskBadge.style.display = 'block';
                    taskBadge.textContent = availableTasks;
                } else {
                    taskBadge.style.display = 'none';
                }
            }
        } catch (error) {
            console.warn('‚ö†Ô∏è –û—à–∏–±–∫–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –±–µ–π–¥–∂–∞ –∑–∞–¥–∞–Ω–∏–π:', error);
        }
    }

    updateUI() {
        this.updateInterface();
        this.saveGameData();
        
        // –û–±–Ω–æ–≤–ª—è–µ–º –∫–Ω–æ–ø–∫–∏ –≤ –≥–ª–∞–≤–Ω–æ–º —ç–∫—Ä–∞–Ω–µ
        if (this.screens.main && this.screens.main.updateSpinButtons) {
            this.screens.main.updateSpinButtons();
        }
    }

    hideLoadingScreen() {
        const loadingScreen = document.getElementById('loading-screen');
        if (loadingScreen) {
            console.log('üé≠ –°–∫—Ä—ã–≤–∞–µ–º –∑–∞–≥—Ä—É–∑–æ—á–Ω—ã–π —ç–∫—Ä–∞–Ω...');
            loadingScreen.style.transition = 'opacity 0.5s ease';
            loadingScreen.style.opacity = '0';
            setTimeout(() => {
                loadingScreen.style.display = 'none';
                console.log('‚úÖ –ó–∞–≥—Ä—É–∑–æ—á–Ω—ã–π —ç–∫—Ä–∞–Ω —Å–∫—Ä—ã—Ç');
            }, 500);
        }
    }

    // –ò–°–ü–†–ê–í–õ–ï–ù–ù–ê–Ø –§–£–ù–ö–¶–ò–Ø - –£–ë–ò–†–ê–ï–ú –¶–ò–§–†–£ "3"
    updateTasksBadge() {
        const tasksBadge = document.getElementById('tasks-badge');
        if (tasksBadge) {
            // –ü–û–õ–ù–û–°–¢–¨–Æ –°–ö–†–´–í–ê–ï–ú –ë–ï–ô–î–ñ
            tasksBadge.style.display = 'none';
        }
    }

    // –ò–°–ü–†–ê–í–õ–ï–ù–ù–ê–Ø –§–£–ù–ö–¶–ò–Ø - –í–û–ó–í–†–ê–©–ê–ï–ú 0 –í–ú–ï–°–¢–û 3
    getAvailableTasksCount() {
        // –ü–æ–¥—Å—á–µ—Ç –¥–æ—Å—Ç—É–ø–Ω—ã—Ö –∑–∞–¥–∞–Ω–∏–π - –≤–æ–∑–≤—Ä–∞—â–∞–µ–º 0 —á—Ç–æ–±—ã —É–±—Ä–∞—Ç—å —Ü–∏—Ñ—Ä—É
        return 0;
    }

    saveGameData() {
        try {
            localStorage.setItem('kosmetichkaGameData', JSON.stringify(this.gameData));
        } catch (error) {
            console.error('‚ùå –û—à–∏–±–∫–∞ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è –¥–∞–Ω–Ω—ã—Ö:', error);
        }
    }

    // –ò–°–ü–†–ê–í–õ–ï–ù–ù–ê–Ø –§–£–ù–ö–¶–ò–Ø –£–í–ï–î–û–ú–õ–ï–ù–ò–ô - –ü–û–ö–ê–ó –í–í–ï–†–•–£ –≠–ö–†–ê–ù–ê
    showStatusMessage(message, type = 'info', duration = 3000) {
        const container = document.getElementById('status-messages');
        if (!container) {
            console.warn('‚ö†Ô∏è –ö–æ–Ω—Ç–µ–π–Ω–µ—Ä —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π –Ω–µ –Ω–∞–π–¥–µ–Ω');
            return;
        }

        // –°–æ–∑–¥–∞–µ–º —ç–ª–µ–º–µ–Ω—Ç —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è
        const messageEl = document.createElement('div');
        messageEl.className = `status-message ${type}`;
        messageEl.textContent = message;

        // –î–æ–±–∞–≤–ª—è–µ–º –≤ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä
        container.appendChild(messageEl);

        // –ê–Ω–∏–º–∞—Ü–∏—è –ø–æ—è–≤–ª–µ–Ω–∏—è
        setTimeout(() => {
            messageEl.classList.add('show');
        }, 10);

        // –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–µ —Å–∫—Ä—ã—Ç–∏–µ
        setTimeout(() => {
            messageEl.classList.remove('show');
            setTimeout(() => {
                if (messageEl.parentNode) {
                    messageEl.parentNode.removeChild(messageEl);
                }
            }, 300);
        }, duration);

        console.log(`üì¢ –£–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ (${type}): ${message}`);
    }

    handleError(error) {
        console.error('üö® –û–±—Ä–∞–±–æ—Ç–∫–∞ –æ—à–∏–±–∫–∏:', error);
        
        // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é –¥—Ä—É–∂–µ–ª—é–±–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ
        this.showStatusMessage('–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –æ–±–Ω–æ–≤–∏—Ç—å —Å—Ç—Ä–∞–Ω–∏—Ü—É.', 'error');
        
        // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –æ—à–∏–±–∫—É –∞–¥–º–∏–Ω–∞–º –µ—Å–ª–∏ —ç—Ç–æ –ø—Ä–æ–¥–∞–∫—à–Ω
        if (this.tg && typeof this.tg.sendData === 'function') {
            this.tg.sendData(JSON.stringify({
                type: 'error',
                message: error.message,
                stack: error.stack,
                timestamp: Date.now()
            }));
        }
    }

    // –ë–ï–ó–û–ü–ê–°–ù–´–ï –º–µ—Ç–æ–¥—ã –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å –±–∞–ª–∞–Ω—Å–æ–º (–∑–∞—â–∏—Ç–∞ –æ—Ç race conditions)
    async addStars(amount) {
        return this.executeBalanceOperation('add', amount);
    }

    async spendStars(amount) {
        return this.executeBalanceOperation('spend', amount);
    }

    async executeBalanceOperation(operation, amount) {
        return new Promise((resolve) => {
            // –î–æ–±–∞–≤–ª—è–µ–º –æ–ø–µ—Ä–∞—Ü–∏—é –≤ –æ—á–µ—Ä–µ–¥—å
            this.pendingBalanceOperations.push({ operation, amount, resolve });
            
            // –ó–∞–ø—É—Å–∫–∞–µ–º –æ–±—Ä–∞–±–æ—Ç–∫—É –µ—Å–ª–∏ –Ω–µ –∏–¥–µ—Ç –¥—Ä—É–≥–∞—è –æ–ø–µ—Ä–∞—Ü–∏—è
            if (!this.balanceOperationInProgress) {
                this.processBalanceOperations();
            }
        });
    }

    async processBalanceOperations() {
        if (this.balanceOperationInProgress || this.pendingBalanceOperations.length === 0) {
            return;
        }

        this.balanceOperationInProgress = true;

        while (this.pendingBalanceOperations.length > 0) {
            const { operation, amount, resolve } = this.pendingBalanceOperations.shift();
            
            try {
                let result = false;
                
                if (operation === 'add') {
                    this.gameData.stars += amount;
                    this.gameData.totalStarsEarned = (this.gameData.totalStarsEarned || 0) + amount;
                    console.log(`‚≠ê –ë–ï–ó–û–ü–ê–°–ù–û –¥–æ–±–∞–≤–ª–µ–Ω–æ ${amount} –∑–≤–µ–∑–¥. –í—Å–µ–≥–æ: ${this.gameData.stars}`);
                    result = true;
                } else if (operation === 'spend') {
                    if (this.gameData.stars >= amount) {
                        this.gameData.stars -= amount;
                        console.log(`üí∞ –ë–ï–ó–û–ü–ê–°–ù–û –ø–æ—Ç—Ä–∞—á–µ–Ω–æ ${amount} –∑–≤–µ–∑–¥. –û—Å—Ç–∞–ª–æ—Å—å: ${this.gameData.stars}`);
                        result = true;
                    } else {
                        console.log(`‚ùå –ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –∑–≤–µ–∑–¥. –ù—É–∂–Ω–æ: ${amount}, –µ—Å—Ç—å: ${this.gameData.stars}`);
                        result = false;
                    }
                }
                
                // –û–±–Ω–æ–≤–ª—è–µ–º –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å —Ç–æ–ª—å–∫–æ –æ–¥–∏–Ω —Ä–∞–∑ –≤ –∫–æ–Ω—Ü–µ
                this.updateInterface();
                this.saveGameData();
                
                resolve(result);
                
            } catch (error) {
                console.error(`‚ùå –û—à–∏–±–∫–∞ –æ–ø–µ—Ä–∞—Ü–∏–∏ —Å –±–∞–ª–∞–Ω—Å–æ–º ${operation}:`, error);
                resolve(false);
            }
        }

        this.balanceOperationInProgress = false;
    }

    addWin(prize) {
        const win = {
            prize: prize,
            timestamp: Date.now()
        };
        
        this.gameData.recentWins.unshift(win);
        
        // –û–≥—Ä–∞–Ω–∏—á–∏–≤–∞–µ–º –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –ø–æ—Å–ª–µ–¥–Ω–∏—Ö –≤—ã–∏–≥—Ä—ã—à–µ–π
        if (this.gameData.recentWins.length > APP_CONFIG.game.maxRecentWins) {
            this.gameData.recentWins = this.gameData.recentWins.slice(0, APP_CONFIG.game.maxRecentWins);
        }
        
        this.gameData.totalWins++;
        this.gameData.prizesWon = (this.gameData.prizesWon || 0) + 1;
        this.saveGameData();
        
        console.log(`üéÅ –î–æ–±–∞–≤–ª–µ–Ω –≤—ã–∏–≥—Ä—ã—à: ${prize.name}`);
    }

    // –ë–ï–ó–û–ü–ê–°–ù–û–ï –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è —Å –∑–∞—â–∏—Ç–æ–π –æ—Ç race conditions
    async updateUserData(newData) {
        if (!newData) return;
        
        console.log('üîÑ –ö–†–ò–¢–ò–ß–ï–°–ö–û–ï –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö –∏–∑ –ë–î:', {
            starsFromServer: newData.stars,
            currentLocal: this.gameData.stars,
            operationInProgress: this.balanceOperationInProgress
        });
        
        // –ñ–¥–µ–º –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è —Ç–µ–∫—É—â–∏—Ö –æ–ø–µ—Ä–∞—Ü–∏–π —Å –±–∞–ª–∞–Ω—Å–æ–º
        if (this.balanceOperationInProgress) {
            console.log('‚è≥ –û–∂–∏–¥–∞–µ–º –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è –æ–ø–µ—Ä–∞—Ü–∏–π —Å –±–∞–ª–∞–Ω—Å–æ–º...');
            await new Promise(resolve => {
                const checkOperations = () => {
                    if (!this.balanceOperationInProgress) {
                        resolve();
                    } else {
                        setTimeout(checkOperations, 50);
                    }
                };
                checkOperations();
            });
        }
        
        // –ò–°–ü–†–ê–í–õ–ï–ù–û: –ë–î –∏–º–µ–µ—Ç –∞–±—Å–æ–ª—é—Ç–Ω—ã–π –ø—Ä–∏–æ—Ä–∏—Ç–µ—Ç –¥–ª—è –∫—Ä–∏—Ç–∏—á–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö
        
        // 1. –ë–∞–ª–∞–Ω—Å –∑–≤–µ–∑–¥ - –¢–û–õ–¨–ö–û –∏–∑ –ë–î (—Å –≤–∞–ª–∏–¥–∞—Ü–∏–µ–π)
        if (newData.stars !== undefined && newData.stars !== null) {
            // –î–û–ë–ê–í–õ–ï–ù–ê –í–ê–õ–ò–î–ê–¶–ò–Ø: –ø—Ä–æ–≤–µ—Ä—è–µ–º —á—Ç–æ –∑–Ω–∞—á–µ–Ω–∏–µ –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ–µ
            if (typeof newData.stars === 'number' && newData.stars >= 0 && newData.stars <= 1000000) {
                console.log(`üí∞ –û–±–Ω–æ–≤–ª—è–µ–º –±–∞–ª–∞–Ω—Å: ${this.gameData.stars} ‚Üí ${newData.stars}`);
                this.gameData.stars = newData.stars;
            } else {
                console.error(`‚ùå –ù–ï–ö–û–†–†–ï–ö–¢–ù–´–ô –±–∞–ª–∞–Ω—Å –æ—Ç —Å–µ—Ä–≤–µ—Ä–∞: ${newData.stars}. –û—Å—Ç–∞–≤–ª—è–µ–º —Ç–µ–∫—É—â–∏–π: ${this.gameData.stars}`);
            }
        } else {
            console.warn('‚ö†Ô∏è –°–µ—Ä–≤–µ—Ä –Ω–µ –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–∏–ª –¥–∞–Ω–Ω—ã–µ –æ –±–∞–ª–∞–Ω—Å–µ –∑–≤–µ–∑–¥');
        }
        
        // 2. –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ - –¢–û–õ–¨–ö–û –∏–∑ –ë–î  
        if (newData.total_stars_earned !== undefined) {
            this.gameData.totalStarsEarned = newData.total_stars_earned;
        }
        if (newData.referrals !== undefined) {
            this.gameData.referrals = newData.referrals;
        }
        if (newData.total_spins !== undefined) {
            this.gameData.totalSpins = newData.total_spins;
        }
        if (newData.prizes_won !== undefined) {
            this.gameData.prizesWon = newData.prizes_won;
        }
        
        // 3. –ü–æ–¥–¥–µ—Ä–∂–∫–∞ —Ä–∞–∑–Ω—ã—Ö —Ñ–æ—Ä–º–∞—Ç–æ–≤ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏
        if (newData.stats) {
            this.gameData.stars = newData.stats.stars !== undefined ? newData.stats.stars : this.gameData.stars;
            this.gameData.totalSpins = newData.stats.totalSpins !== undefined ? newData.stats.totalSpins : this.gameData.totalSpins;
            this.gameData.prizesWon = newData.stats.prizesWon !== undefined ? newData.stats.prizesWon : this.gameData.prizesWon;  
            this.gameData.totalStarsEarned = newData.stats.totalStarsEarned !== undefined ? newData.stats.totalStarsEarned : this.gameData.totalStarsEarned;
            this.gameData.referrals = newData.stats.referrals !== undefined ? newData.stats.referrals : this.gameData.referrals;
        }
        
        // 4. –ù–µ–∫—Ä–∏—Ç–∏—á–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ –º–æ–∂–µ–º –æ–±—ä–µ–¥–∏–Ω—è—Ç—å
        if (newData.prizes) {
            this.gameData.prizes = newData.prizes;
        }
        if (newData.recentWins) {
            this.gameData.recentWins = newData.recentWins;
        }
        if (newData.completedTasks || newData.tasks?.completed) {
            this.gameData.completedTasks = newData.completedTasks || newData.tasks.completed;
            console.log('‚úÖ –û–±–Ω–æ–≤–ª–µ–Ω—ã –≤—ã–ø–æ–ª–Ω–µ–Ω–Ω—ã–µ –∑–∞–¥–∞–Ω–∏—è:', this.gameData.completedTasks);
        }
        
        // –ö–†–ò–¢–ò–ß–ù–û: –ù–µ–º–µ–¥–ª–µ–Ω–Ω–æ –æ–±–Ω–æ–≤–ª—è–µ–º –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å —Å –¥–∞–Ω–Ω—ã–º–∏ –∏–∑ –ë–î
        this.updateInterface();
        this.saveGameData(); // –°–æ—Ö—Ä–∞–Ω—è–µ–º –ø–æ—Å–ª–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è UI
        
        console.log('‚úÖ –î–∞–Ω–Ω—ã–µ —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∏—Ä–æ–≤–∞–Ω—ã —Å –ë–î:', {
            stars: this.gameData.stars,
            totalStarsEarned: this.gameData.totalStarsEarned,
            referrals: this.gameData.referrals
        });
        
        // –û–±–Ω–æ–≤–ª—è–µ–º –ø—Ä–æ—Ñ–∏–ª—å –µ—Å–ª–∏ –æ–Ω –∞–∫—Ç–∏–≤–µ–Ω (—É–±–∏—Ä–∞–µ–º –¥—É–±–ª–∏—Ä–æ–≤–∞–Ω–∏–µ)
        if (this.navigation.currentScreen === 'profile' && this.screens.profile) {
            // –ù–µ–º–µ–¥–ª–µ–Ω–Ω–æ–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ
            this.screens.profile.loadProfileData();
            // –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–æ–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ —á–µ—Ä–µ–∑ –∑–∞–¥–µ—Ä–∂–∫—É –¥–ª—è –Ω–∞–¥–µ–∂–Ω–æ—Å—Ç–∏
            setTimeout(() => {
                this.screens.profile.loadProfileData();
            }, 500);
        }

        console.log('‚úÖ –î–∞–Ω–Ω—ã–µ –æ–±–Ω–æ–≤–ª–µ–Ω—ã:', this.gameData);
    }

    // –ú–µ—Ç–æ–¥ –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –¥–∞–Ω–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è (–∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è –≤ telegram-integration)
    getUserData() {
        return this.gameData;
    }

    // –ü–æ–∫–∞–∑ –∫–æ–Ω—Ñ–µ—Ç—Ç–∏
    showConfetti() {
        const colors = ['#EF55A5', '#CCD537', '#809EFF', '#FF6B9D', '#A4B93A'];
        
        for (let i = 0; i < 50; i++) {
            setTimeout(() => {
                const confetti = document.createElement('div');
                confetti.className = 'confetti';
                confetti.style.cssText = `
                    position: fixed;
                    left: ${Math.random() * 100}%;
                    top: -10px;
                    width: 10px;
                    height: 10px;
                    background: ${colors[Math.floor(Math.random() * colors.length)]};
                    pointer-events: none;
                    z-index: 9999;
                `;
                
                document.body.appendChild(confetti);
                
                setTimeout(() => {
                    if (confetti.parentNode) {
                        confetti.parentNode.removeChild(confetti);
                    }
                }, 3000);
            }, i * 50);
        }
    }

    // –£–î–ê–õ–ï–ù –î–£–ë–õ–ò–†–û–í–ê–ù–ù–´–ô –ú–ï–¢–û–î - –∏—Å–ø–æ–ª—å–∑—É–µ–º –æ—Å–Ω–æ–≤–Ω–æ–π –º–µ—Ç–æ–¥ updateStarsDisplay() –≤—ã—à–µ

    // –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –∞–≤–∞—Ç–∞—Ä–∫–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤ header
    updateUserAvatar() {
        const avatarElement = document.querySelector('.header .avatar');
        const user = this.tg?.initDataUnsafe?.user;
        
        if (avatarElement && user) {
            // –û—á–∏—â–∞–µ–º —Ç–µ–∫—É—â–µ–µ —Å–æ–¥–µ—Ä–∂–∏–º–æ–µ
            avatarElement.innerHTML = '';
            
            // –ü—ã—Ç–∞–µ–º—Å—è –∑–∞–≥—Ä—É–∑–∏—Ç—å —Ñ–æ—Ç–æ –∏–∑ Telegram
            if (user.photo_url) {
                const img = document.createElement('img');
                img.src = user.photo_url;
                img.alt = `–ê–≤–∞—Ç–∞—Ä ${user.first_name}`;
                img.style.cssText = 'width: 100%; height: 100%; object-fit: cover; border-radius: 50%;';
                
                // Fallback –µ—Å–ª–∏ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ –Ω–µ –∑–∞–≥—Ä—É–∑–∏—Ç—Å—è
                img.onerror = () => {
                    avatarElement.textContent = user.first_name?.charAt(0).toUpperCase() || 'üë§';
                };
                
                avatarElement.appendChild(img);
            } else if (user.first_name) {
                avatarElement.textContent = user.first_name.charAt(0).toUpperCase();
            } else {
                avatarElement.textContent = 'üë§';
            }
        }
    }

    // –ú–µ—Ç–æ–¥ –¥–ª—è –Ω–∞–≤–∏–≥–∞—Ü–∏–∏ –∫ —ç–∫—Ä–∞–Ω—É (–¥–ª—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è –∏–∑ –¥—Ä—É–≥–∏—Ö –º–æ–¥—É–ª–µ–π)
    navigateToScreen(screenName) {
        if (this.navigation) {
            this.navigation.navigateTo(screenName);
        }
    }

    // –ú–µ—Ç–æ–¥ –¥–ª—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏ —Ä–µ—Ñ–µ—Ä–∞–ª–æ–≤
    updateReferrals(count) {
        this.gameData.referrals = count;
        this.saveGameData();
        this.updateInterface();
        
        // –û–±–Ω–æ–≤–ª—è–µ–º –ø—Ä–æ—Ñ–∏–ª—å –µ—Å–ª–∏ –æ–Ω –∞–∫—Ç–∏–≤–µ–Ω
        if (this.navigation.currentScreen === 'profile' && this.screens.profile) {
            this.screens.profile.loadProfileData();
        }
    }

    // –ú–µ—Ç–æ–¥—ã –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å –º–µ–≥–∞ —Ä—É–ª–µ—Ç–∫–æ–π
    renderMegaRoulette() {
        if (!this.screens.megaRoulette) {
            console.error('‚ùå –ú–µ–≥–∞ —Ä—É–ª–µ—Ç–∫–∞ –Ω–µ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–∞');
            return;
        }

        // –£–±–∏—Ä–∞–µ–º –≤—Å–µ –æ–±—ã—á–Ω—ã–µ —ç–∫—Ä–∞–Ω—ã
        document.querySelectorAll('.screen:not(#mega-roulette-screen)').forEach(screen => {
            screen.classList.remove('active');
        });

        // –î–æ–±–∞–≤–ª—è–µ–º –º–µ–≥–∞ —Ä—É–ª–µ—Ç–∫—É –≤ DOM
        const container = document.getElementById('screens-container');
        if (container) {
            // –£–±–∏—Ä–∞–µ–º —Å—É—â–µ—Å—Ç–≤—É—é—â—É—é –º–µ–≥–∞ —Ä—É–ª–µ—Ç–∫—É –µ—Å–ª–∏ –µ—Å—Ç—å
            this.removeMegaRoulette();
            
            // –î–æ–±–∞–≤–ª—è–µ–º –Ω–æ–≤—É—é
            const megaHTML = this.screens.megaRoulette.render();
            container.insertAdjacentHTML('beforeend', megaHTML);
            
            // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º
            this.screens.megaRoulette.init();
            
            // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º
            const megaScreen = document.getElementById('mega-roulette-screen');
            if (megaScreen) {
                megaScreen.classList.add('active');
                this.navigation.currentScreen = 'mega-roulette';
                console.log('‚úÖ –ú–µ–≥–∞ —Ä—É–ª–µ—Ç–∫–∞ –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∞');
            }
        }
    }

    removeMegaRoulette() {
        const existingMegaScreen = document.getElementById('mega-roulette-screen');
        if (existingMegaScreen) {
            existingMegaScreen.remove();
            console.log('üóëÔ∏è –ú–µ–≥–∞ —Ä—É–ª–µ—Ç–∫–∞ —É–¥–∞–ª–µ–Ω–∞ –∏–∑ DOM');
        }
    }
}

// –ì–ª–æ–±–∞–ª—å–Ω—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏ –¥–ª—è –Ω–∞–≤–∏–≥–∞—Ü–∏–∏
window.navigateToDeposit = () => {
    if (window.app && window.app.navigation) {
        window.app.navigation.navigateTo('deposit');
    }
};

// –ì–ª–æ–±–∞–ª—å–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –¥–ª—è –¥–æ—Å—Ç—É–ø–∞ –∫ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—é
window.getApp = () => {
    return window.app;
};
