// public/js/screens/profile.js - –í–ï–†–°–ò–Ø –° –í–ö–õ–ê–î–ö–ê–ú–ò: –ü–†–û–§–ò–õ–¨ + –õ–ò–î–ï–†–ë–û–†–î

export class ProfileScreen {
    constructor(app) {
        this.app = app;
        this.currentTab = 'profile'; // profile | leaderboard
    }

    render() {
        const gameData = this.app.gameData;
        
        return `
            <div id="profile-screen" class="screen">
                <!-- –í–∫–ª–∞–¥–∫–∏ –ø—Ä–æ—Ñ–∏–ª—è -->
                <div class="profile-tabs">
                    <button class="profile-tab active" data-tab="profile">
                        <i class="fas fa-user"></i>
                        –ü—Ä–æ—Ñ–∏–ª—å
                    </button>
                    <button class="profile-tab" data-tab="leaderboard">
                        <i class="fas fa-trophy"></i>
                        –õ–∏–¥–µ—Ä–±–æ—Ä–¥
                    </button>
                </div>

                <!-- –ö–æ–Ω—Ç–µ–Ω—Ç –≤–∫–ª–∞–¥–∫–∏ "–ü—Ä–æ—Ñ–∏–ª—å" -->
                <div id="profile-tab-content" class="tab-content active">
                    <!-- –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ -->
                    <div class="section">
                        <h3 class="section-title">üë§ –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ</h3>
                        <div class="user-info-card">
                            <div class="user-avatar">
                                ${this.app.tg?.initDataUnsafe?.user?.first_name?.charAt(0) || 'üë§'}
                            </div>
                            <div class="user-details">
                                <div class="user-item">
                                    <span class="user-label">ID:</span>
                                    <span class="user-value">${this.app.tg?.initDataUnsafe?.user?.id || '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–æ'}</span>
                                </div>
                                <div class="user-item">
                                    <span class="user-label">–ù–∏–∫:</span>
                                    <span class="user-value">@${this.app.tg?.initDataUnsafe?.user?.username || '–Ω–µ —É–∫–∞–∑–∞–Ω'}</span>
                                </div>
                                <div class="user-item">
                                    <span class="user-label">–ò–º—è:</span>
                                    <span class="user-value">${this.app.tg?.initDataUnsafe?.user?.first_name || '–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å'}</span>
                                </div>
                                <div class="user-item">
                                    <span class="user-label">–ó–≤–µ–∑–¥—ã:</span>
                                    <span class="user-value stars">${gameData.stars} ‚≠ê</span>
                                </div>
                                <div class="user-item">
                                    <span class="user-label">–ü—Ä–æ–∫—Ä—É—Ç–∫–∏:</span>
                                    <span class="user-value">${gameData.totalSpins || 0}</span>
                                </div>
                                <div class="user-item">
                                    <span class="user-label">–ü—Ä–∏–∑—ã:</span>
                                    <span class="user-value">${gameData.prizes?.length || gameData.prizesWon || 0}</span>
                                </div>
                            </div>
                        </div>
                    </div>

                    <!-- –†–µ—Ñ–µ—Ä–∞–ª—ã (–±–µ–∑ —É—Ä–æ–≤–Ω–µ–π) -->
                    <div class="section">
                        <h3 class="section-title">üë• –†–µ—Ñ–µ—Ä–∞–ª—ã</h3>
                        <div class="referral-simple">
                            <div class="referral-stats">
                                <div class="referral-stat-item">
                                    <div class="stat-number">${gameData.referrals || 0}</div>
                                    <div class="stat-desc">–ü—Ä–∏–≥–ª–∞—à–µ–Ω–Ω—ã—Ö –¥—Ä—É–∑–µ–π</div>
                                </div>
                                <div class="referral-stat-item">
                                    <div class="stat-number">${(gameData.referrals || 0) * 50}</div>
                                    <div class="stat-desc">‚≠ê –ó–∞—Ä–∞–±–æ—Ç–∞–Ω–æ —Å —Ä–µ—Ñ–µ—Ä–∞–ª–æ–≤</div>
                                </div>
                            </div>
                            
                            <div class="referral-action">
                                <button id="share-referral" class="share-btn">
                                    <i class="fas fa-share"></i>
                                    –ü—Ä–∏–≥–ª–∞—Å–∏—Ç—å –¥—Ä—É–≥–∞
                                </button>
                                <p class="referral-bonus">+50 ‚≠ê –∑–∞ –∫–∞–∂–¥–æ–≥–æ –¥—Ä—É–≥–∞</p>
                            </div>
                        </div>
                    </div>

                    <!-- –ò—Å—Ç–æ—Ä–∏—è –ø—Ä–∏–∑–æ–≤ -->
                    <div class="section">
                        <h3 class="section-title">üéÅ –ò—Å—Ç–æ—Ä–∏—è –ø—Ä–∏–∑–æ–≤</h3>
                        <div class="prize-history">
                            ${this.renderPrizeHistory()}
                        </div>
                    </div>

                    <!-- –û—Ç—Å—Ç—É–ø –¥–ª—è –Ω–∞–≤–∏–≥–∞—Ü–∏–∏ -->
                    <div style="height: 60px;"></div>
                </div>

                <!-- –ö–æ–Ω—Ç–µ–Ω—Ç –≤–∫–ª–∞–¥–∫–∏ "–õ–∏–¥–µ—Ä–±–æ—Ä–¥" -->
                <div id="leaderboard-tab-content" class="tab-content">
                    <div class="section">
                        <h3 class="section-title">üèÜ –¢–æ–ø –ø–æ —Ä–µ—Ñ–µ—Ä–∞–ª–∞–º</h3>
                        <div class="leaderboard-description">
                            <p>–õ–∏–¥–µ—Ä—ã –ø–æ –∫–æ–ª–∏—á–µ—Å—Ç–≤—É –ø—Ä–∏–≥–ª–∞—à–µ–Ω–Ω—ã—Ö –¥—Ä—É–∑–µ–π</p>
                        </div>
                        <div class="leaderboard-content">
                            ${this.renderReferralLeaderboard()}
                        </div>
                    </div>

                    <!-- –û—Ç—Å—Ç—É–ø –¥–ª—è –Ω–∞–≤–∏–≥–∞—Ü–∏–∏ -->
                    <div style="height: 60px;"></div>
                </div>
            </div>
        `;
    }

    init() {
        console.log('üë§ –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è —ç–∫—Ä–∞–Ω–∞ –ø—Ä–æ—Ñ–∏–ª—è...');
        this.setupEventListeners();
        console.log('‚úÖ –≠–∫—Ä–∞–Ω –ø—Ä–æ—Ñ–∏–ª—è –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω');
    }

    setupEventListeners() {
        // –ü–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏–µ –≤–∫–ª–∞–¥–æ–∫
        const profileTabs = document.querySelectorAll('.profile-tab');
        profileTabs.forEach(tab => {
            tab.addEventListener('click', (e) => {
                const tabName = e.target.closest('.profile-tab').dataset.tab;
                this.switchTab(tabName);
            });
        });

        // –ö–Ω–æ–ø–∫–∞ "–ü—Ä–∏–≥–ª–∞—Å–∏—Ç—å –¥—Ä—É–≥–∞"
        const shareBtn = document.getElementById('share-referral');
        if (shareBtn) {
            shareBtn.addEventListener('click', () => {
                this.shareReferralLink();
            });
        }
    }

    switchTab(tabName) {
        console.log(`üîÑ –ü–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏–µ –Ω–∞ –≤–∫–ª–∞–¥–∫—É: ${tabName}`);
        
        this.currentTab = tabName;
        
        // –û–±–Ω–æ–≤–ª—è–µ–º –∞–∫—Ç–∏–≤–Ω—ã–µ –≤–∫–ª–∞–¥–∫–∏
        document.querySelectorAll('.profile-tab').forEach(tab => {
            tab.classList.toggle('active', tab.dataset.tab === tabName);
        });
        
        // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –Ω—É–∂–Ω—ã–π –∫–æ–Ω—Ç–µ–Ω—Ç
        document.querySelectorAll('.tab-content').forEach(content => {
            content.classList.remove('active');
        });
        
        const targetContent = document.getElementById(`${tabName}-tab-content`);
        if (targetContent) {
            targetContent.classList.add('active');
        }
    }

    renderPrizeHistory() {
        const prizes = this.app.gameData.recentWins || this.app.gameData.prizes || [];
        
        if (prizes.length === 0) {
            return `
                <div class="empty-history">
                    <i class="fas fa-gift"></i>
                    <p>–ü–æ–∫–∞ –Ω–µ—Ç –≤—ã–∏–≥—Ä—ã—à–µ–π</p>
                    <span>–ö—Ä—É—Ç–∏—Ç–µ —Ä—É–ª–µ—Ç–∫—É, —á—Ç–æ–±—ã –≤—ã–∏–≥—Ä–∞—Ç—å –ø—Ä–∏–∑—ã!</span>
                </div>
            `;
        }

        return prizes.slice(0, 10).map(prize => {
            const prizeIcon = this.getPrizeIcon(prize.type || prize.name);
            const prizeValue = prize.value ? `+${prize.value} ‚≠ê` : '';
            const date = prize.timestamp ? this.formatDate(prize.timestamp) : '–ù–µ–¥–∞–≤–Ω–æ';
            
            return `
                <div class="prize-history-item">
                    <div class="prize-icon">${prizeIcon}</div>
                    <div class="prize-info">
                        <div class="prize-name">${prize.name || prize.type}</div>
                        <div class="prize-date">${date}</div>
                    </div>
                    <div class="prize-value">${prizeValue}</div>
                </div>
            `;
        }).join('');
    }

    renderReferralLeaderboard() {
        // –ó–¥–µ—Å—å –±—É–¥–µ—Ç –∑–∞–≥—Ä—É–∂–∞—Ç—å—Å—è —Ä–µ–∞–ª—å–Ω—ã–π –ª–∏–¥–µ—Ä–±–æ—Ä–¥ —Å —Å–µ—Ä–≤–µ—Ä–∞
        // –ü–æ–∫–∞ –∏—Å–ø–æ–ª—å–∑—É–µ–º –º–æ–∫–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ —Å —Ñ–æ–∫—É—Å–æ–º –Ω–∞ —Ä–µ—Ñ–µ—Ä–∞–ª—ã
        const mockLeaderboard = [
            { name: '–ö—Ä–∏—Å—Ç–∏–Ω–∞ –í.', referrals: 47, avatar: 'üë©', position: 1 },
            { name: '–ê–Ω–Ω–∞ –ö.', referrals: 34, avatar: 'üë±‚Äç‚ôÄÔ∏è', position: 2 },
            { name: '–ú–∞—Ä–∏—è –î.', referrals: 28, avatar: 'üë©‚Äçü¶∞', position: 3 },
            { name: '–ï–ª–µ–Ω–∞ –°.', referrals: 22, avatar: 'üßë‚Äçü¶±', position: 4 },
            { name: '–°–æ—Ñ—å—è –ú.', referrals: 19, avatar: 'üë©‚Äçü¶≥', position: 5 },
            { name: '–î–∞—Ä—å—è –õ.', referrals: 15, avatar: 'üë©‚Äçü¶≤', position: 6 },
            { name: '–í–∞–ª–µ—Ä–∏—è –ö.', referrals: 12, avatar: 'üë∏', position: 7 },
            { name: '–ê–ª–∏—Å–∞ –ü.', referrals: 9, avatar: 'üë©‚Äçüíº', position: 8 },
            { name: '–í—ã', referrals: this.app.gameData.referrals || 0, avatar: 'üë§', isUser: true, position: this.calculateUserPosition() }
        ];

        // –°–æ—Ä—Ç–∏—Ä—É–µ–º –ø–æ –∫–æ–ª–∏—á–µ—Å—Ç–≤—É —Ä–µ—Ñ–µ—Ä–∞–ª–æ–≤
        const sortedLeaderboard = mockLeaderboard.sort((a, b) => b.referrals - a.referrals);
        
        // –û–±–Ω–æ–≤–ª—è–µ–º –ø–æ–∑–∏—Ü–∏–∏ –ø–æ—Å–ª–µ —Å–æ—Ä—Ç–∏—Ä–æ–≤–∫–∏
        sortedLeaderboard.forEach((user, index) => {
            user.position = index + 1;
        });

        return sortedLeaderboard.map(user => {
            const medal = this.getMedalForPosition(user.position);
            
            return `
                <div class="leaderboard-item ${user.isUser ? 'user-item' : ''}">
                    <div class="leader-rank">
                        ${medal || user.position}
                    </div>
                    <div class="leader-avatar">${user.avatar}</div>
                    <div class="leader-info">
                        <div class="leader-name">${user.name}</div>
                        <div class="leader-stats">
                            <span class="referral-count">
                                <i class="fas fa-users"></i>
                                ${user.referrals} –¥—Ä—É–∑–µ–π
                            </span>
                            <span class="referral-earnings">
                                <i class="fas fa-star"></i>
                                ${user.referrals * 50} –∑–≤–µ–∑–¥
                            </span>
                        </div>
                    </div>
                    ${user.isUser ? '<div class="user-badge">–í–´</div>' : ''}
                </div>
            `;
        }).join('');
    }

    getMedalForPosition(position) {
        const medals = {
            1: 'ü•á',
            2: 'ü•à', 
            3: 'ü•â'
        };
        return medals[position] || null;
    }

    calculateUserPosition() {
        // –ü—Ä–æ—Å—Ç–æ–π —Ä–∞—Å—á–µ—Ç –ø–æ–∑–∏—Ü–∏–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è (–≤ —Ä–µ–∞–ª—å–Ω–æ—Å—Ç–∏ –±—É–¥–µ—Ç —Å —Å–µ—Ä–≤–µ—Ä–∞)
        const userReferrals = this.app.gameData.referrals || 0;
        if (userReferrals >= 30) return Math.floor(Math.random() * 3) + 1; // –¢–æ–ø-3
        if (userReferrals >= 15) return Math.floor(Math.random() * 5) + 4; // 4-8 –º–µ—Å—Ç–æ
        if (userReferrals >= 5) return Math.floor(Math.random() * 10) + 9; // 9-18 –º–µ—Å—Ç–æ
        return Math.floor(Math.random() * 20) + 19; // 19+ –º–µ—Å—Ç–æ
    }

    shareReferralLink() {
        const userId = this.app.tg?.initDataUnsafe?.user?.id || 'user';
        const botUsername = 'kosmetichka_lottery_bot'; // –ó–∞–º–µ–Ω–∏—Ç—å –Ω–∞ —Ä–µ–∞–ª—å–Ω–æ–µ –∏–º—è –±–æ—Ç–∞
        const referralLink = `https://t.me/${botUsername}?start=${userId}`;
        
        const shareText = `üéÅ –ü—Ä–∏—Å–æ–µ–¥–∏–Ω—è–π—Å—è –∫ Kosmetichka Lottery!\n\n–ü–æ–ª—É—á–∏ 50 –∑–≤–µ–∑–¥ –∑–∞ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—é –∏ –≤—ã–∏–≥—Ä—ã–≤–∞–π –∫—Ä—É—Ç—ã–µ –ø—Ä–∏–∑—ã! üíÑ‚ú®\n\n${referralLink}`;
        
        if (this.app.tg) {
            this.app.tg.openTelegramLink(`https://t.me/share/url?url=${encodeURIComponent(referralLink)}&text=${encodeURIComponent(shareText)}`);
        } else {
            navigator.clipboard.writeText(referralLink).then(() => {
                this.app.showStatusMessage('–°—Å—ã–ª–∫–∞ —Å–∫–æ–ø–∏—Ä–æ–≤–∞–Ω–∞!', 'success');
            }).catch(() => {
                this.app.showStatusMessage('–ù–µ —É–¥–∞–ª–æ—Å—å —Å–∫–æ–ø–∏—Ä–æ–≤–∞—Ç—å —Å—Å—ã–ª–∫—É', 'error');
            });
        }
    }

    getPrizeIcon(prizeType) {
        const icons = {
            'stars': '‚≠ê',
            'certificate': 'üéÅ',
            'golden_apple': 'üçé',
            'dolce_deals': 'üõçÔ∏è',
            'beauty_set': 'üíÑ',
            'jewelry': 'üíé',
            'empty': 'üåü'
        };
        
        return icons[prizeType] || 'üéÅ';
    }

    formatDate(timestamp) {
        const date = new Date(timestamp);
        return date.toLocaleDateString('ru-RU', {
            day: '2-digit',
            month: '2-digit', 
            year: 'numeric',
            hour: '2-digit',
            minute: '2-digit'
        });
    }

    destroy() {
        console.log('üßπ –û—á–∏—Å—Ç–∫–∞ —ç–∫—Ä–∞–Ω–∞ –ø—Ä–æ—Ñ–∏–ª—è...');
        // –ó–¥–µ—Å—å –º–æ–∂–Ω–æ –æ—á–∏—Å—Ç–∏—Ç—å –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ —Å–æ–±—ã—Ç–∏–π, –µ—Å–ª–∏ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ
    }
}