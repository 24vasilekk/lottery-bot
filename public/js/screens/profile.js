// public/js/screens/profile.js - –ò–°–ü–†–ê–í–õ–ï–ù–ù–ê–Ø –í–ï–†–°–ò–Ø

export class ProfileScreen {
    constructor(app) {
        this.app = app;
    }

    render() {
        const gameData = this.app.gameData;
        
        return `
            <div id="profile-screen" class="screen">
                <div class="profile-header">
                    <div class="profile-avatar">
                        ${this.renderUserAvatar()}
                    </div>
                    <div class="profile-info">
                        <h2 class="profile-name">${this.getUserDisplayName()}</h2>
                        <div class="profile-telegram-id">ID: ${this.getTelegramId()}</div>
                        <div class="profile-stats">
                            <div class="stat-item">
                                <div class="stat-value">${gameData.stars}</div>
                                <div class="stat-label">‚≠ê –ó–≤–µ–∑–¥—ã</div>
                            </div>
                            <div class="stat-item">
                                <div class="stat-value">${gameData.referrals || 0}</div>
                                <div class="stat-label">üë• –†–µ—Ñ–µ—Ä–∞–ª—ã</div>
                            </div>
                        </div>
                    </div>
                </div>

                <div class="profile-content">
                    <div class="section">
                        <h3 class="section-title">üìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞</h3>
                        <div class="stats-grid">
                            <div class="stats-card">
                                <div class="stats-icon">‚≠ê</div>
                                <div class="stats-content">
                                    <div class="stats-value">${gameData.totalStarsEarned || gameData.stars}</div>
                                    <div class="stats-desc">–í—Å–µ–≥–æ –∑–≤–µ–∑–¥ –∑–∞—Ä–∞–±–æ—Ç–∞–Ω–æ</div>
                                </div>
                            </div>
                            
                            
                            <div class="stats-card">
                                <div class="stats-icon">üë•</div>
                                <div class="stats-content">
                                    <div class="stats-value">${gameData.referrals || 0}</div>
                                    <div class="stats-desc">–î—Ä—É–∑–µ–π –ø—Ä–∏–≥–ª–∞—à–µ–Ω–æ</div>
                                </div>
                            </div>
                        </div>
                    </div>

                    <div class="section">
                        <h3 class="section-title">üë• –†–µ—Ñ–µ—Ä–∞–ª—ã</h3>
                        <div class="referral-section">
                            <div class="referral-info">
                                <div class="referral-count">
                                    <span class="count-number">${gameData.referrals || 0}</span>
                                    <span class="count-label">–ü—Ä–∏–≥–ª–∞—à–µ–Ω–Ω—ã—Ö –¥—Ä—É–∑–µ–π</span>
                                </div>
                                <div class="referral-bonus">
                                    <span class="bonus-number">${(gameData.referrals || 0) * 100}</span>
                                    <span class="bonus-label">‚≠ê –ë–æ–Ω—É—Å–Ω—ã—Ö –∑–≤–µ–∑–¥ –ø–æ–ª—É—á–µ–Ω–æ</span>
                                </div>
                            </div>
                            
                            <button id="share-referral" class="referral-btn">
                                <i class="fas fa-share"></i>
                                –ü—Ä–∏–≥–ª–∞—Å–∏—Ç—å –¥—Ä—É–≥–∞
                            </button>
                            
                            <div class="referral-description">
                                <p>–ó–∞ –∫–∞–∂–¥–æ–≥–æ –ø—Ä–∏–≥–ª–∞—à–µ–Ω–Ω–æ–≥–æ –¥—Ä—É–≥–∞ –≤—ã –ø–æ–ª—É—á–∞–µ—Ç–µ:</p>
                                <ul>
                                    <li>üíØ 100 –∑–≤–µ–∑–¥ –±–æ–Ω—É—Å–æ–º</li>
                                    <li>üéØ 1 –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–∞—è –ø—Ä–æ–∫—Ä—É—Ç–∫–∞</li>
                                    <li>üèÜ –ü—Ä–æ–≥—Ä–µ—Å—Å –∫ –¥–æ—Å—Ç–∏–∂–µ–Ω–∏—è–º</li>
                                </ul>
                            </div>
                        </div>
                    </div>

                    <div class="section">
                        <h3 class="section-title">üèÜ –ò—Å—Ç–æ—Ä–∏—è —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç–æ–≤</h3>
                        <div class="prizes-history">
                            ${this.renderPrizesHistory()}
                        </div>
                    </div>

                    <!-- –î–û–ü–û–õ–ù–ò–¢–ï–õ–¨–ù–´–ô –û–¢–°–¢–£–ü –î–õ–Ø –ü–û–õ–ù–û–ô –ü–†–û–ö–†–£–¢–ö–ò -->
                    <div style="height: 60px;"></div>
                </div>
            </div>
        `;
    }

    init() {
        console.log('üë§ –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è —ç–∫—Ä–∞–Ω–∞ –ø—Ä–æ—Ñ–∏–ª—è...');
        this.setupEventListeners();
        console.log('‚úÖ –≠–∫—Ä–∞–Ω –ø—Ä–æ—Ñ–∏–ª—è –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω');
    }

    setupEventListeners() {
        // –ö–Ω–æ–ø–∫–∞ "–ü—Ä–∏–≥–ª–∞—Å–∏—Ç—å –¥—Ä—É–≥–∞"
        const shareBtn = document.getElementById('share-referral');
        if (shareBtn) {
            shareBtn.addEventListener('click', () => {
                this.shareReferralLink();
            });
        }
    }

    calculateLevel() {
        const totalStars = this.app.gameData.totalStarsEarned || this.app.gameData.stars || 0;
        return Math.floor(totalStars / 1000) + 1;
    }

    renderPrizesHistory() {
        const gameData = this.app.gameData;
        const allPrizes = gameData.prizes || [];

        // –§–∏–ª—å—Ç—Ä—É–µ–º —Ç–æ–ª—å–∫–æ —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç—ã (–∏—Å–∫–ª—é—á–∞–µ–º –∑–≤–µ–∑–¥—ã –∏ –ø—É—Å—Ç—ã–µ –ø—Ä–∏–∑—ã)
        const certificatePrizes = allPrizes.filter(prize => {
            const prizeType = prize.type || '';
            return prizeType.startsWith('golden-apple-') || prizeType === 'dolce-deals';
        });

        if (certificatePrizes.length === 0) {
            return `
                <div class="empty-prizes">
                    <div class="empty-icon">üèÜ</div>
                    <div class="empty-text">–°–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç–æ–≤ –ø–æ–∫–∞ –Ω–µ—Ç</div>
                    <div class="empty-subtitle">–ö—Ä—É—Ç–∏—Ç–µ —Ä—É–ª–µ—Ç–∫—É –∏ –≤—ã–∏–≥—Ä—ã–≤–∞–π—Ç–µ —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç—ã!</div>
                </div>
            `;
        }

        // –°–æ—Ä—Ç–∏—Ä—É–µ–º –ø—Ä–∏–∑—ã –ø–æ –¥–∞—Ç–µ –ø–æ–ª—É—á–µ–Ω–∏—è (–Ω–æ–≤—ã–µ —Å–Ω–∞—á–∞–ª–∞) –∏ –±–µ—Ä–µ–º –º–∞–∫—Å–∏–º—É–º 5
        const sortedPrizes = [...certificatePrizes]
            .sort((a, b) => (b.timestamp || 0) - (a.timestamp || 0))
            .slice(0, 5);

        return sortedPrizes.map(prize => `
            <div class="prize-item">
                <div class="prize-icon">${this.getPrizeIcon(prize)}</div>
                <div class="prize-content">
                    <div class="prize-name">${prize.name || '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω—ã–π –ø—Ä–∏–∑'}</div>
                    <div class="prize-details">
                        <span class="prize-type">${this.getPrizeTypeLabel(prize)}</span>
                        ${prize.value ? `<span class="prize-value">${prize.value} ‚≠ê</span>` : ''}
                    </div>
                    <div class="prize-date">${this.formatDate(prize.timestamp || Date.now())}</div>
                </div>
                <div class="prize-status">
                    ${prize.claimed ? 
                        '<span class="status-claimed">‚úÖ –ü–æ–ª—É—á–µ–Ω</span>' : 
                        '<span class="status-pending">‚è≥ –û–∂–∏–¥–∞–µ—Ç</span>'
                    }
                </div>
            </div>
        `).join('');
    }

    getPrizeIcon(prize) {
        // –ò–∫–æ–Ω–∫–∏ –¥–ª—è —Ä–∞–∑–Ω—ã—Ö —Ç–∏–ø–æ–≤ –ø—Ä–∏–∑–æ–≤
        const prizeIcons = {
            'golden-apple-3000': 'üíé',
            'golden-apple-2000': 'üéÅ',
            'golden-apple-1500': 'üéà',
            'golden-apple-1000': 'üéÄ',
            'golden-apple-500': 'üéä',
            'stars-200': '‚≠ê',
            'stars-100': 'üí´',
            'stars-75': '‚ú®',
            'stars-50': 'üåü',
            'stars-25': 'üíñ',
            'dolce-deals': 'üç∞',
            'empty': 'üåô'
        };

        return prizeIcons[prize.type] || prize.icon || 'üéÅ';
    }

    getUserDisplayName() {
        // –ü—Ä–æ–±—É–µ–º –ø–æ–ª—É—á–∏—Ç—å –¥–∞–Ω–Ω—ã–µ –∏–∑ —Ä–∞–∑–Ω—ã—Ö –∏—Å—Ç–æ—á–Ω–∏–∫–æ–≤
        const telegramUser = window.Telegram?.WebApp?.initDataUnsafe?.user || 
                            this.app.tg?.initDataUnsafe?.user ||
                            window.telegramIntegration?.user;
        
        if (telegramUser?.username) {
            return `@${telegramUser.username}`;
        } else if (telegramUser?.first_name) {
            return telegramUser.first_name;
        }
        return '–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å';
    }

    getTelegramId() {
        // –ü—Ä–æ–±—É–µ–º –ø–æ–ª—É—á–∏—Ç—å ID –∏–∑ —Ä–∞–∑–Ω—ã—Ö –∏—Å—Ç–æ—á–Ω–∏–∫–æ–≤
        const telegramUser = window.Telegram?.WebApp?.initDataUnsafe?.user || 
                            this.app.tg?.initDataUnsafe?.user ||
                            window.telegramIntegration?.user;
        
        return telegramUser?.id || '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–æ';
    }

    getPrizeTypeLabel(prize) {
        const typeLabels = {
            'golden-apple-3000': '–ó–æ–ª–æ—Ç–æ–µ —è–±–ª–æ–∫–æ 3000‚ÇΩ',
            'golden-apple-2000': '–ó–æ–ª–æ—Ç–æ–µ —è–±–ª–æ–∫–æ 2000‚ÇΩ',
            'golden-apple-1500': '–ó–æ–ª–æ—Ç–æ–µ —è–±–ª–æ–∫–æ 1500‚ÇΩ',
            'golden-apple-1000': '–ó–æ–ª–æ—Ç–æ–µ —è–±–ª–æ–∫–æ 1000‚ÇΩ',
            'golden-apple-500': '–ó–æ–ª–æ—Ç–æ–µ —è–±–ª–æ–∫–æ 500‚ÇΩ',
            'stars-200': '200 –∑–≤–µ–∑–¥',
            'stars-100': '100 –∑–≤–µ–∑–¥',
            'stars-75': '75 –∑–≤–µ–∑–¥',
            'stars-50': '50 –∑–≤–µ–∑–¥',
            'stars-25': '25 –∑–≤–µ–∑–¥',
            'dolce-deals': 'Dolce Deals',
            'empty': '–ü–æ–≤–µ–∑–µ—Ç –≤ —Å–ª–µ–¥—É—é—â–∏–π —Ä–∞–∑'
        };

        return typeLabels[prize.type] || prize.description || '–ü—Ä–∏–∑';
    }

    shareReferralLink() {
        const userId = this.getTelegramId();
        const botUsername = 'kosmetichka_bot'; // –ó–∞–º–µ–Ω–∏—Ç–µ –Ω–∞ —Ä–µ–∞–ª—å–Ω–æ–µ –∏–º—è –±–æ—Ç–∞
        const referralLink = `https://t.me/${botUsername}?start=ref_${userId}`;
        
        const message = `üéâ –ü—Ä–∏—Å–æ–µ–¥–∏–Ω—è–π—Å—è –∫ –∏–≥—Ä–µ "–ö–æ—Å–º–µ—Ç–∏—á–∫–∞"!\n\nüíÑ –ö—Ä—É—Ç–∏ —Ä—É–ª–µ—Ç–∫—É –∏ –≤—ã–∏–≥—Ä—ã–≤–∞–π –ø—Ä–∏–∑—ã –æ—Ç –∫–æ—Å–º–µ—Ç–∏—á–µ—Å–∫–∏—Ö –±—Ä–µ–Ω–¥–æ–≤!\n‚≠ê –ü–æ–ª—É—á–∞–π –∑–≤–µ–∑–¥—ã –∏ –æ–±–º–µ–Ω–∏–≤–∞–π –Ω–∞ –ø–æ–¥–∞—Ä–∫–∏!\n\n${referralLink}`;
        
        if (this.app.tg?.isVersionAtLeast('6.1')) {
            this.app.tg.openTelegramLink(`https://t.me/share/url?url=${encodeURIComponent(referralLink)}&text=${encodeURIComponent(message)}`);
        } else {
            // Fallback –¥–ª—è —Å—Ç–∞—Ä—ã—Ö –≤–µ—Ä—Å–∏–π
            navigator.clipboard.writeText(referralLink).then(() => {
                this.app.showStatusMessage('–°—Å—ã–ª–∫–∞ —Å–∫–æ–ø–∏—Ä–æ–≤–∞–Ω–∞ –≤ –±—É—Ñ–µ—Ä –æ–±–º–µ–Ω–∞!', 'success');
            }).catch(() => {
                this.app.showStatusMessage('–ù–µ —É–¥–∞–ª–æ—Å—å —Å–∫–æ–ø–∏—Ä–æ–≤–∞—Ç—å —Å—Å—ã–ª–∫—É', 'error');
            });
        }
    }

    formatDate(timestamp) {
        const date = new Date(timestamp);
        return date.toLocaleDateString('ru-RU', {
            day: '2-digit',
            month: '2-digit', 
            year: 'numeric',
            hour: '2-digit',
            minute: '2-digit'
        });
    }

    renderUserAvatar() {
        const user = this.app.tg?.initDataUnsafe?.user;
        
        // –ü—ã—Ç–∞–µ–º—Å—è –ø–æ–ª—É—á–∏—Ç—å —Ñ–æ—Ç–æ –ø—Ä–æ—Ñ–∏–ª—è –∏–∑ Telegram
        if (user?.photo_url) {
            return `<img src="${user.photo_url}" alt="–ê–≤–∞—Ç–∞—Ä ${user.first_name}" 
                         style="width: 100%; height: 100%; object-fit: cover; border-radius: 50%;"
                         onerror="this.style.display='none'; this.nextElementSibling.style.display='flex';">
                    <div class="avatar-fallback" style="display: none; width: 100%; height: 100%; 
                         display: flex; align-items: center; justify-content: center; 
                         font-size: 36px; font-weight: bold;">
                        ${user.first_name?.charAt(0).toUpperCase() || 'üë§'}
                    </div>`;
        } else if (user?.first_name) {
            return user.first_name.charAt(0).toUpperCase();
        }
        
        return 'üë§';
    }

    destroy() {
        console.log('üßπ –û—á–∏—Å—Ç–∫–∞ —ç–∫—Ä–∞–Ω–∞ –ø—Ä–æ—Ñ–∏–ª—è...');
        // –ó–¥–µ—Å—å –º–æ–∂–Ω–æ –æ—á–∏—Å—Ç–∏—Ç—å –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ —Å–æ–±—ã—Ç–∏–π, –µ—Å–ª–∏ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ
    }
}
