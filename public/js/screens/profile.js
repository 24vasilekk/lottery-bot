// public/js/screens/profile.js - –ò–°–ü–†–ê–í–õ–ï–ù–ù–ê–Ø –í–ï–†–°–ò–Ø

export class ProfileScreen {
    constructor(app) {
        this.app = app;
    }

    render() {
        const gameData = this.app.gameData;
        
        return `
            <div id="profile-screen" class="screen">
                <div class="profile-header">
                    <div class="profile-avatar">
                        ${this.renderUserAvatar()}
                    </div>
                    <div class="profile-info">
                        <h2 class="profile-name">${this.getUserDisplayName()}</h2>
                        <div class="profile-telegram-id">ID: ${this.app.tg?.initDataUnsafe?.user?.id || '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–æ'}</div>
                        <div class="profile-stats">
                            <div class="stat-item">
                                <div class="stat-value">${gameData.stars}</div>
                                <div class="stat-label">‚≠ê –ó–≤–µ–∑–¥—ã</div>
                            </div>
                            <div class="stat-item">
                                <div class="stat-value">${gameData.referrals || 0}</div>
                                <div class="stat-label">üë• –†–µ—Ñ–µ—Ä–∞–ª—ã</div>
                            </div>
                        </div>
                    </div>
                </div>

                <div class="profile-content">
                    <div class="section">
                        <h3 class="section-title">üìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞</h3>
                        <div class="stats-grid">
                            <div class="stats-card">
                                <div class="stats-icon">‚≠ê</div>
                                <div class="stats-content">
                                    <div class="stats-value">${gameData.totalStarsEarned || gameData.stars}</div>
                                    <div class="stats-desc">–í—Å–µ–≥–æ –∑–≤–µ–∑–¥ –∑–∞—Ä–∞–±–æ—Ç–∞–Ω–æ</div>
                                </div>
                            </div>
                            
                            
                            <div class="stats-card">
                                <div class="stats-icon">üë•</div>
                                <div class="stats-content">
                                    <div class="stats-value">${gameData.referrals || 0}</div>
                                    <div class="stats-desc">–î—Ä—É–∑–µ–π –ø—Ä–∏–≥–ª–∞—à–µ–Ω–æ</div>
                                </div>
                            </div>
                            
                            
                            <div class="stats-card">
                                <div class="stats-icon">üíé</div>
                                <div class="stats-content">
                                    <div class="stats-value">${this.calculateLevel()}</div>
                                    <div class="stats-desc">–¢–µ–∫—É—â–∏–π —É—Ä–æ–≤–µ–Ω—å</div>
                                </div>
                            </div>
                        </div>
                    </div>

                    <div class="section">
                        <h3 class="section-title">üèÜ –î–æ—Å—Ç–∏–∂–µ–Ω–∏—è</h3>
                        <div class="achievements-grid">
                            ${this.renderAchievements()}
                        </div>
                    </div>

                    <div class="section">
                        <h3 class="section-title">üèÜ –ò—Å—Ç–æ—Ä–∏—è –ø—Ä–∏–∑–æ–≤</h3>
                        <div class="prizes-history">
                            ${this.renderPrizesHistory()}
                        </div>
                    </div>

                    <div class="section">
                        <h3 class="section-title">üë• –†–µ—Ñ–µ—Ä–∞–ª—ã</h3>
                        <div class="referral-section">
                            <div class="referral-info">
                                <div class="referral-count">
                                    <span class="count-number">${gameData.referrals || 0}</span>
                                    <span class="count-label">–ü—Ä–∏–≥–ª–∞—à–µ–Ω–Ω—ã—Ö –¥—Ä—É–∑–µ–π</span>
                                </div>
                                <div class="referral-bonus">
                                    <span class="bonus-number">${(gameData.referrals || 0) * 100}</span>
                                    <span class="bonus-label">‚≠ê –ë–æ–Ω—É—Å–Ω—ã—Ö –∑–≤–µ–∑–¥ –ø–æ–ª—É—á–µ–Ω–æ</span>
                                </div>
                            </div>
                            
                            <button id="share-referral" class="referral-btn">
                                <i class="fas fa-share"></i>
                                –ü—Ä–∏–≥–ª–∞—Å–∏—Ç—å –¥—Ä—É–≥–∞
                            </button>
                            
                            <div class="referral-description">
                                <p>–ó–∞ –∫–∞–∂–¥–æ–≥–æ –ø—Ä–∏–≥–ª–∞—à–µ–Ω–Ω–æ–≥–æ –¥—Ä—É–≥–∞ –≤—ã –ø–æ–ª—É—á–∞–µ—Ç–µ:</p>
                                <ul>
                                    <li>üíØ 100 –∑–≤–µ–∑–¥ –±–æ–Ω—É—Å–æ–º</li>
                                    <li>üéØ 1 –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–∞—è –ø—Ä–æ–∫—Ä—É—Ç–∫–∞</li>
                                    <li>üèÜ –ü—Ä–æ–≥—Ä–µ—Å—Å –∫ –¥–æ—Å—Ç–∏–∂–µ–Ω–∏—è–º</li>
                                </ul>
                            </div>
                        </div>
                    </div>

                    <div class="section">
                        <h3 class="section-title">‚öôÔ∏è –ù–∞—Å—Ç—Ä–æ–π–∫–∏</h3>
                        <div class="settings-list">
                            <div class="setting-item">
                                <div class="setting-info">
                                    <div class="setting-name">üîî –£–≤–µ–¥–æ–º–ª–µ–Ω–∏—è</div>
                                    <div class="setting-desc">–ü–æ–ª—É—á–∞—Ç—å —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –æ –Ω–æ–≤—ã—Ö –ø—Ä–∏–∑–∞—Ö</div>
                                </div>
                                <div class="setting-toggle">
                                    <input type="checkbox" id="notifications-toggle" ${gameData.settings?.notifications !== false ? 'checked' : ''}>
                                    <label for="notifications-toggle" class="toggle-switch"></label>
                                </div>
                            </div>
                            
                            <div class="setting-item">
                                <div class="setting-info">
                                    <div class="setting-name">üéµ –ó–≤—É–∫–∏</div>
                                    <div class="setting-desc">–í–æ—Å–ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç—å –∑–≤—É–∫–∏ –ø—Ä–∏ –≤—ã–∏–≥—Ä—ã—à–µ</div>
                                </div>
                                <div class="setting-toggle">
                                    <input type="checkbox" id="sounds-toggle" ${gameData.settings?.sounds !== false ? 'checked' : ''}>
                                    <label for="sounds-toggle" class="toggle-switch"></label>
                                </div>
                            </div>
                            
                            <div class="setting-item">
                                <div class="setting-info">
                                    <div class="setting-name">‚ú® –ê–Ω–∏–º–∞—Ü–∏–∏</div>
                                    <div class="setting-desc">–ü–æ–∫–∞–∑—ã–≤–∞—Ç—å –∞–Ω–∏–º–∞—Ü–∏–∏ –∏ —ç—Ñ—Ñ–µ–∫—Ç—ã</div>
                                </div>
                                <div class="setting-toggle">
                                    <input type="checkbox" id="animations-toggle" ${gameData.settings?.animations !== false ? 'checked' : ''}>
                                    <label for="animations-toggle" class="toggle-switch"></label>
                                </div>
                            </div>
                        </div>
                    </div>

                    <div class="section">
                        <h3 class="section-title">üì± –û –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–∏</h3>
                        <div class="app-info">
                            <div class="info-item">
                                <span class="info-label">–í–µ—Ä—Å–∏—è:</span>
                                <span class="info-value">1.0.0</span>
                            </div>
                            <div class="info-item">
                                <span class="info-label">–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å ID:</span>
                                <span class="info-value">${this.app.tg?.initDataUnsafe?.user?.id || '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–æ'}</span>
                            </div>
                            <div class="info-item">
                                <span class="info-label">–î–∞—Ç–∞ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏:</span>
                                <span class="info-value">${this.formatDate(gameData.registrationDate || Date.now())}</span>
                            </div>
                        </div>
                        
                        <div class="action-buttons">
                            <button id="reset-progress" class="btn-danger">
                                <i class="fas fa-trash"></i>
                                –°–±—Ä–æ—Å –ø—Ä–æ–≥—Ä–µ—Å—Å–∞
                            </button>
                            
                            <button id="export-data" class="btn-secondary">
                                <i class="fas fa-download"></i>
                                –≠–∫—Å–ø–æ—Ä—Ç –¥–∞–Ω–Ω—ã—Ö
                            </button>
                        </div>
                    </div>

                    <!-- –î–û–ü–û–õ–ù–ò–¢–ï–õ–¨–ù–´–ô –û–¢–°–¢–£–ü –î–õ–Ø –ü–û–õ–ù–û–ô –ü–†–û–ö–†–£–¢–ö–ò -->
                    <div style="height: 60px;"></div>
                </div>
            </div>
        `;
    }

    init() {
        console.log('üë§ –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è —ç–∫—Ä–∞–Ω–∞ –ø—Ä–æ—Ñ–∏–ª—è...');
        this.setupEventListeners();
        console.log('‚úÖ –≠–∫—Ä–∞–Ω –ø—Ä–æ—Ñ–∏–ª—è –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω');
    }

    setupEventListeners() {
        // –ö–Ω–æ–ø–∫–∞ "–ü—Ä–∏–≥–ª–∞—Å–∏—Ç—å –¥—Ä—É–≥–∞"
        const shareBtn = document.getElementById('share-referral');
        if (shareBtn) {
            shareBtn.addEventListener('click', () => {
                this.shareReferralLink();
            });
        }

        // –ü–µ—Ä–µ–∫–ª—é—á–∞—Ç–µ–ª–∏ –Ω–∞—Å—Ç—Ä–æ–µ–∫
        const notificationsToggle = document.getElementById('notifications-toggle');
        const soundsToggle = document.getElementById('sounds-toggle');
        const animationsToggle = document.getElementById('animations-toggle');

        if (notificationsToggle) {
            notificationsToggle.addEventListener('change', (e) => {
                this.updateSetting('notifications', e.target.checked);
            });
        }

        if (soundsToggle) {
            soundsToggle.addEventListener('change', (e) => {
                this.updateSetting('sounds', e.target.checked);
            });
        }

        if (animationsToggle) {
            animationsToggle.addEventListener('change', (e) => {
                this.updateSetting('animations', e.target.checked);
            });
        }

        // –ö–Ω–æ–ø–∫–∞ —Å–±—Ä–æ—Å–∞ –ø—Ä–æ–≥—Ä–µ—Å—Å–∞
        const resetBtn = document.getElementById('reset-progress');
        if (resetBtn) {
            resetBtn.addEventListener('click', () => {
                this.resetProgress();
            });
        }

        // –ö–Ω–æ–ø–∫–∞ —ç–∫—Å–ø–æ—Ä—Ç–∞ –¥–∞–Ω–Ω—ã—Ö
        const exportBtn = document.getElementById('export-data');
        if (exportBtn) {
            exportBtn.addEventListener('click', () => {
                this.exportData();
            });
        }
    }

    calculateLevel() {
        const totalStars = this.app.gameData.totalStarsEarned || this.app.gameData.stars || 0;
        return Math.floor(totalStars / 1000) + 1;
    }

    renderAchievements() {
        const gameData = this.app.gameData;
        const achievements = [];
        
        // –î–æ—Å—Ç–∏–∂–µ–Ω–∏—è –∑–∞ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—é
        achievements.push({
            icon: 'üéâ',
            name: '–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å!',
            description: '–ó–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–ª—Å—è –≤ –∏–≥—Ä–µ',
            unlocked: true
        });
        
        // –î–æ—Å—Ç–∏–∂–µ–Ω–∏–µ –∑–∞ –¥—Ä—É–∑–µ–π
        if (gameData.referrals >= 1) {
            achievements.push({
                icon: 'üë•',
                name: '–î—Ä—É–≥-–ø–æ–º–æ—â–Ω–∏–∫',
                description: '–ü—Ä–∏–≥–ª–∞—Å–∏–ª –ø–µ—Ä–≤–æ–≥–æ –¥—Ä—É–≥–∞',
                unlocked: true
            });
        }
        
        // –ó–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ –¥–æ—Å—Ç–∏–∂–µ–Ω–∏—è (—Ç–æ–ª—å–∫–æ —Å–≤—è–∑–∞–Ω–Ω—ã–µ —Å–æ –∑–≤–µ–∑–¥–∞–º–∏ –∏ —Ä–µ—Ñ–µ—Ä–∞–ª–∞–º–∏)
        const lockedAchievements = [
            {
                icon: 'üåü',
                name: '–ó–≤–µ–∑–¥–Ω—ã–π –∏–≥—Ä–æ–∫',
                description: '–°–æ–±–µ—Ä–∏ 10000 –∑–≤–µ–∑–¥',
                unlocked: false,
                progress: gameData.totalStarsEarned || 0,
                target: 10000
            },
            {
                icon: 'üëë',
                name: '–õ–∏–¥–µ—Ä —Å–æ–æ–±—â–µ—Å—Ç–≤–∞',
                description: '–ü—Ä–∏–≥–ª–∞—Å–∏ 20 –¥—Ä—É–∑–µ–π',
                unlocked: false,
                progress: gameData.referrals || 0,
                target: 20
            }
        ];
        
        const allAchievements = [...achievements, ...lockedAchievements];
        
        if (allAchievements.length === 0) {
            return '<div class="empty-achievements">–î–æ—Å—Ç–∏–∂–µ–Ω–∏–π –ø–æ–∫–∞ –Ω–µ—Ç. –ò–≥—Ä–∞–π—Ç–µ –∏ –ø–æ–ª—É—á–∞–π—Ç–µ –Ω–∞–≥—Ä–∞–¥—ã!</div>';
        }
        
        return allAchievements.map(achievement => `
            <div class="achievement-item ${achievement.unlocked ? 'unlocked' : 'locked'}">
                <div class="achievement-icon">${achievement.icon}</div>
                <div class="achievement-content">
                    <div class="achievement-name">${achievement.name}</div>
                    <div class="achievement-description">${achievement.description}</div>
                    ${!achievement.unlocked && achievement.progress !== undefined ? 
                        `<div class="achievement-progress">
                            <div class="progress-bar">
                                <div class="progress-fill" style="width: ${Math.min((achievement.progress / achievement.target) * 100, 100)}%"></div>
                            </div>
                            <span class="progress-text">${achievement.progress}/${achievement.target}</span>
                        </div>` : ''}
                </div>
            </div>
        `).join('');
    }

    renderPrizesHistory() {
        const gameData = this.app.gameData;
        const prizes = gameData.prizes || [];

        if (prizes.length === 0) {
            return `
                <div class="empty-prizes">
                    <div class="empty-icon">üéÅ</div>
                    <div class="empty-text">–ü—Ä–∏–∑–æ–≤ –ø–æ–∫–∞ –Ω–µ—Ç</div>
                    <div class="empty-subtitle">–ö—Ä—É—Ç–∏—Ç–µ —Ä—É–ª–µ—Ç–∫—É –∏ –≤—ã–∏–≥—Ä—ã–≤–∞–π—Ç–µ –ø–æ–¥–∞—Ä–∫–∏!</div>
                </div>
            `;
        }

        // –°–æ—Ä—Ç–∏—Ä—É–µ–º –ø—Ä–∏–∑—ã –ø–æ –¥–∞—Ç–µ –ø–æ–ª—É—á–µ–Ω–∏—è (–Ω–æ–≤—ã–µ —Å–Ω–∞—á–∞–ª–∞)
        const sortedPrizes = [...prizes].sort((a, b) => (b.timestamp || 0) - (a.timestamp || 0));

        return sortedPrizes.map(prize => `
            <div class="prize-item">
                <div class="prize-icon">${this.getPrizeIcon(prize)}</div>
                <div class="prize-content">
                    <div class="prize-name">${prize.name || '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω—ã–π –ø—Ä–∏–∑'}</div>
                    <div class="prize-details">
                        <span class="prize-type">${this.getPrizeTypeLabel(prize)}</span>
                        ${prize.value ? `<span class="prize-value">${prize.value} ‚≠ê</span>` : ''}
                    </div>
                    <div class="prize-date">${this.formatDate(prize.timestamp || Date.now())}</div>
                </div>
                <div class="prize-status">
                    ${prize.claimed ? 
                        '<span class="status-claimed">‚úÖ –ü–æ–ª—É—á–µ–Ω</span>' : 
                        '<span class="status-pending">‚è≥ –û–∂–∏–¥–∞–µ—Ç</span>'
                    }
                </div>
            </div>
        `).join('');
    }

    getPrizeIcon(prize) {
        // –ò–∫–æ–Ω–∫–∏ –¥–ª—è —Ä–∞–∑–Ω—ã—Ö —Ç–∏–ø–æ–≤ –ø—Ä–∏–∑–æ–≤
        const prizeIcons = {
            'golden-apple-3000': 'üíé',
            'golden-apple-2000': 'üéÅ',
            'golden-apple-1500': 'üéà',
            'golden-apple-1000': 'üéÄ',
            'golden-apple-500': 'üéä',
            'stars-200': '‚≠ê',
            'stars-100': 'üí´',
            'stars-75': '‚ú®',
            'stars-50': 'üåü',
            'stars-25': 'üíñ',
            'dolce-deals': 'üç∞',
            'empty': 'üåô'
        };

        return prizeIcons[prize.type] || prize.icon || 'üéÅ';
    }

    getUserDisplayName() {
        const user = this.app.tg?.initDataUnsafe?.user;
        if (user?.username) {
            return `@${user.username}`;
        } else if (user?.first_name) {
            return user.first_name;
        }
        return '–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å';
    }

    getPrizeTypeLabel(prize) {
        const typeLabels = {
            'golden-apple-3000': '–ó–æ–ª–æ—Ç–æ–µ —è–±–ª–æ–∫–æ 3000‚ÇΩ',
            'golden-apple-2000': '–ó–æ–ª–æ—Ç–æ–µ —è–±–ª–æ–∫–æ 2000‚ÇΩ',
            'golden-apple-1500': '–ó–æ–ª–æ—Ç–æ–µ —è–±–ª–æ–∫–æ 1500‚ÇΩ',
            'golden-apple-1000': '–ó–æ–ª–æ—Ç–æ–µ —è–±–ª–æ–∫–æ 1000‚ÇΩ',
            'golden-apple-500': '–ó–æ–ª–æ—Ç–æ–µ —è–±–ª–æ–∫–æ 500‚ÇΩ',
            'stars-200': '200 –∑–≤–µ–∑–¥',
            'stars-100': '100 –∑–≤–µ–∑–¥',
            'stars-75': '75 –∑–≤–µ–∑–¥',
            'stars-50': '50 –∑–≤–µ–∑–¥',
            'stars-25': '25 –∑–≤–µ–∑–¥',
            'dolce-deals': 'Dolce Deals',
            'empty': '–ü–æ–≤–µ–∑–µ—Ç –≤ —Å–ª–µ–¥—É—é—â–∏–π —Ä–∞–∑'
        };

        return typeLabels[prize.type] || prize.description || '–ü—Ä–∏–∑';
    }

    shareReferralLink() {
        const userId = this.app.tg?.initDataUnsafe?.user?.id;
        const botUsername = 'kosmetichka_bot'; // –ó–∞–º–µ–Ω–∏—Ç–µ –Ω–∞ —Ä–µ–∞–ª—å–Ω–æ–µ –∏–º—è –±–æ—Ç–∞
        const referralLink = `https://t.me/${botUsername}?start=ref_${userId}`;
        
        const message = `üéâ –ü—Ä–∏—Å–æ–µ–¥–∏–Ω—è–π—Å—è –∫ –∏–≥—Ä–µ "–ö–æ—Å–º–µ—Ç–∏—á–∫–∞"!\n\nüíÑ –ö—Ä—É—Ç–∏ —Ä—É–ª–µ—Ç–∫—É –∏ –≤—ã–∏–≥—Ä—ã–≤–∞–π –ø—Ä–∏–∑—ã –æ—Ç –∫–æ—Å–º–µ—Ç–∏—á–µ—Å–∫–∏—Ö –±—Ä–µ–Ω–¥–æ–≤!\n‚≠ê –ü–æ–ª—É—á–∞–π –∑–≤–µ–∑–¥—ã –∏ –æ–±–º–µ–Ω–∏–≤–∞–π –Ω–∞ –ø–æ–¥–∞—Ä–∫–∏!\n\n${referralLink}`;
        
        if (this.app.tg?.isVersionAtLeast('6.1')) {
            this.app.tg.openTelegramLink(`https://t.me/share/url?url=${encodeURIComponent(referralLink)}&text=${encodeURIComponent(message)}`);
        } else {
            // Fallback –¥–ª—è —Å—Ç–∞—Ä—ã—Ö –≤–µ—Ä—Å–∏–π
            navigator.clipboard.writeText(referralLink).then(() => {
                this.app.showStatusMessage('–°—Å—ã–ª–∫–∞ —Å–∫–æ–ø–∏—Ä–æ–≤–∞–Ω–∞ –≤ –±—É—Ñ–µ—Ä –æ–±–º–µ–Ω–∞!', 'success');
            }).catch(() => {
                this.app.showStatusMessage('–ù–µ —É–¥–∞–ª–æ—Å—å —Å–∫–æ–ø–∏—Ä–æ–≤–∞—Ç—å —Å—Å—ã–ª–∫—É', 'error');
            });
        }
    }

    updateSetting(setting, value) {
        if (!this.app.gameData.settings) {
            this.app.gameData.settings = {};
        }
        
        this.app.gameData.settings[setting] = value;
        this.app.saveGameData();
        
        this.app.showStatusMessage(`–ù–∞—Å—Ç—Ä–æ–π–∫–∞ "${setting}" ${value ? '–≤–∫–ª—é—á–µ–Ω–∞' : '–æ—Ç–∫–ª—é—á–µ–Ω–∞'}`, 'success');
    }

    resetProgress() {
        if (confirm('–í—ã —É–≤–µ—Ä–µ–Ω—ã, —á—Ç–æ —Ö–æ—Ç–∏—Ç–µ —Å–±—Ä–æ—Å–∏—Ç—å –≤–µ—Å—å –ø—Ä–æ–≥—Ä–µ—Å—Å? –≠—Ç–æ –¥–µ–π—Å—Ç–≤–∏–µ –Ω–µ–ª—å–∑—è –æ—Ç–º–µ–Ω–∏—Ç—å!')) {
            // –°–æ—Ö—Ä–∞–Ω—è–µ–º —Ç–æ–ª—å–∫–æ –±–∞–∑–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ
            const newGameData = {
                stars: 100,
                availableFriendSpins: 1,
                referrals: 0,
                registrationDate: Date.now(),
                settings: this.app.gameData.settings || {}
            };
            
            this.app.gameData = newGameData;
            this.app.saveGameData();
            
            // –û–±–Ω–æ–≤–ª—è–µ–º UI
            this.app.updateUI();
            
            // –ü–µ—Ä–µ—Ö–æ–¥–∏–º –Ω–∞ –≥–ª–∞–≤–Ω—ã–π —ç–∫—Ä–∞–Ω
            this.app.navigation.navigateTo('main');
            
            this.app.showStatusMessage('–ü—Ä–æ–≥—Ä–µ—Å—Å —É—Å–ø–µ—à–Ω–æ —Å–±—Ä–æ—à–µ–Ω!', 'success');
        }
    }

    exportData() {
        const dataStr = JSON.stringify(this.app.gameData, null, 2);
        const dataBlob = new Blob([dataStr], {type: 'application/json'});
        
        const link = document.createElement('a');
        link.href = URL.createObjectURL(dataBlob);
        link.download = `kosmetichka_data_${Date.now()}.json`;
        link.click();
        
        this.app.showStatusMessage('–î–∞–Ω–Ω—ã–µ —ç–∫—Å–ø–æ—Ä—Ç–∏—Ä–æ–≤–∞–Ω—ã!', 'success');
    }

    formatDate(timestamp) {
        const date = new Date(timestamp);
        return date.toLocaleDateString('ru-RU', {
            day: '2-digit',
            month: '2-digit', 
            year: 'numeric',
            hour: '2-digit',
            minute: '2-digit'
        });
    }

    renderUserAvatar() {
        const user = this.app.tg?.initDataUnsafe?.user;
        
        // –ü—ã—Ç–∞–µ–º—Å—è –ø–æ–ª—É—á–∏—Ç—å —Ñ–æ—Ç–æ –ø—Ä–æ—Ñ–∏–ª—è –∏–∑ Telegram
        if (user?.photo_url) {
            return `<img src="${user.photo_url}" alt="–ê–≤–∞—Ç–∞—Ä ${user.first_name}" 
                         style="width: 100%; height: 100%; object-fit: cover; border-radius: 50%;"
                         onerror="this.style.display='none'; this.nextElementSibling.style.display='flex';">
                    <div class="avatar-fallback" style="display: none; width: 100%; height: 100%; 
                         display: flex; align-items: center; justify-content: center; 
                         font-size: 36px; font-weight: bold;">
                        ${user.first_name?.charAt(0).toUpperCase() || 'üë§'}
                    </div>`;
        } else if (user?.first_name) {
            return user.first_name.charAt(0).toUpperCase();
        }
        
        return 'üë§';
    }

    destroy() {
        console.log('üßπ –û—á–∏—Å—Ç–∫–∞ —ç–∫—Ä–∞–Ω–∞ –ø—Ä–æ—Ñ–∏–ª—è...');
        // –ó–¥–µ—Å—å –º–æ–∂–Ω–æ –æ—á–∏—Å—Ç–∏—Ç—å –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ —Å–æ–±—ã—Ç–∏–π, –µ—Å–ª–∏ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ
    }
}
