// –¢–µ—Å—Ç –º–∏–≥—Ä–∞—Ü–∏–∏ –Ω–∞ PostgreSQL
const createDatabase = require('./database-selector');

async function testPostgresMigration() {
    console.log('üß™ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –º–∏–≥—Ä–∞—Ü–∏–∏ –Ω–∞ PostgreSQL/SQLite\n');
    
    try {
        // –°–æ–∑–¥–∞–µ–º –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö (–∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –≤—ã–±–µ—Ä–µ—Ç SQLite –∏–ª–∏ PostgreSQL)
        const db = createDatabase();
        
        // –ñ–¥–µ–º –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—é (–µ—Å–ª–∏ —ç—Ç–æ –∞—Å–∏–Ω—Ö—Ä–æ–Ω–Ω—ã–π –ø—Ä–æ—Ü–µ—Å—Å)
        if (db.init && typeof db.init === 'function') {
            await db.init();
        } else {
            // –î–ª—è SQLite –∂–¥–µ–º 1 —Å–µ–∫—É–Ω–¥—É
            await new Promise(resolve => setTimeout(resolve, 1000));
        }
        
        console.log('‚úÖ –ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–∞\n');
        
        // –¢–µ—Å—Ç–∏—Ä—É–µ–º –æ—Å–Ω–æ–≤–Ω—ã–µ –æ–ø–µ—Ä–∞—Ü–∏–∏
        const TEST_USER_ID = 418684940;
        
        console.log('1Ô∏è‚É£ –¢–µ—Å—Ç–∏—Ä—É–µ–º —Å–æ–∑–¥–∞–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è...');
        
        // –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—É—â–µ—Å—Ç–≤—É–µ—Ç –ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å
        let user = await db.getUser(TEST_USER_ID);
        console.log('   –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –¥–æ —Å–æ–∑–¥–∞–Ω–∏—è:', user ? '–Ω–∞–π–¥–µ–Ω' : '–Ω–µ –Ω–∞–π–¥–µ–Ω');
        
        if (!user) {
            // –°–æ–∑–¥–∞–µ–º –Ω–æ–≤–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
            await db.createUser({
                telegram_id: TEST_USER_ID,
                username: 'testuser',
                first_name: 'Test',
                last_name: 'User'
            });
            console.log('   ‚úÖ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —Å–æ–∑–¥–∞–Ω');
        }
        
        // –ü—Ä–æ–≤–µ—Ä—è–µ–º —á—Ç–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —Å–æ–∑–¥–∞–ª—Å—è
        user = await db.getUser(TEST_USER_ID);
        console.log(`   –ë–∞–ª–∞–Ω—Å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è: ${user.stars} ‚≠ê\n`);
        
        console.log('2Ô∏è‚É£ –¢–µ—Å—Ç–∏—Ä—É–µ–º –¥–æ–±–∞–≤–ª–µ–Ω–∏–µ –∑–≤–µ–∑–¥...');
        await db.addUserStars(TEST_USER_ID, 50);
        user = await db.getUser(TEST_USER_ID);
        console.log(`   –ë–∞–ª–∞–Ω—Å –ø–æ—Å–ª–µ –¥–æ–±–∞–≤–ª–µ–Ω–∏—è 50 –∑–≤–µ–∑–¥: ${user.stars} ‚≠ê\n`);
        
        console.log('3Ô∏è‚É£ –¢–µ—Å—Ç–∏—Ä—É–µ–º —Å–ø–∏—Å–∞–Ω–∏–µ –∑–≤–µ–∑–¥...');
        if (db.subtractUserStars) {
            await db.subtractUserStars(TEST_USER_ID, 20);
            user = await db.getUser(TEST_USER_ID);
            console.log(`   –ë–∞–ª–∞–Ω—Å –ø–æ—Å–ª–µ —Å–ø–∏—Å–∞–Ω–∏—è 20 –∑–≤–µ–∑–¥: ${user.stars} ‚≠ê\n`);
        } else {
            console.log('   ‚ö†Ô∏è  –ú–µ—Ç–æ–¥ subtractUserStars –Ω–µ —Ä–µ–∞–ª–∏–∑–æ–≤–∞–Ω –¥–ª—è —ç—Ç–æ–π –ë–î\n');
        }
        
        console.log('4Ô∏è‚É£ –¢–µ—Å—Ç–∏—Ä—É–µ–º –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏...');
        await db.updateUserActivity(TEST_USER_ID);
        console.log('   ‚úÖ –ê–∫—Ç–∏–≤–Ω–æ—Å—Ç—å –æ–±–Ω–æ–≤–ª–µ–Ω–∞\n');
        
        console.log('‚úÖ –í–°–ï –¢–ï–°–¢–´ –ü–†–û–ô–î–ï–ù–´ –£–°–ü–ï–®–ù–û!');
        console.log('‚îÅ'.repeat(50));
        console.log('üéØ –ì–æ—Ç–æ–≤–æ –∫ –¥–µ–ø–ª–æ—é –Ω–∞ Railway —Å PostgreSQL');
        
        // –ó–∞–∫—Ä—ã–≤–∞–µ–º —Å–æ–µ–¥–∏–Ω–µ–Ω–∏–µ –µ—Å–ª–∏ —ç—Ç–æ PostgreSQL
        if (db.close && typeof db.close === 'function') {
            await db.close();
        }
        
        process.exit(0);
        
    } catch (error) {
        console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–∏:', error);
        process.exit(1);
    }
}

// –ó–∞–ø—É—Å–∫–∞–µ–º —Ç–µ—Å—Ç
testPostgresMigration();