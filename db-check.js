const { Client } = require('pg');

async function checkDatabase() {
    const client = new Client({
        connectionString: 'postgresql://postgres:xoIMWOtNInnWGHXnxiYCEBVmpUBcisbo@gondola.proxy.rlwy.net:59145/railway',
        ssl: {
            rejectUnauthorized: false
        }
    });

    try {
        console.log('üîå –ü–æ–¥–∫–ª—é—á–∞–µ–º—Å—è –∫ PostgreSQL...');
        await client.connect();
        console.log('‚úÖ –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ —É—Å–ø–µ—à–Ω–æ!\n');

        // –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—Ö–µ–º—É —Ç–∞–±–ª–∏—Ü—ã users
        console.log('üìã –°—Ö–µ–º–∞ —Ç–∞–±–ª–∏—Ü—ã users:');
        const usersSchema = await client.query(`
            SELECT column_name, data_type, is_nullable, column_default
            FROM information_schema.columns 
            WHERE table_name = 'users' 
            ORDER BY ordinal_position
        `);
        
        console.table(usersSchema.rows);

        // –ü—Ä–æ–≤–µ—Ä—è–µ–º –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –∑–∞–ø–∏—Å–µ–π
        console.log('\nüìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ —Ç–∞–±–ª–∏—Ü:');
        const userCount = await client.query('SELECT COUNT(*) as count FROM users');
        const prizesCount = await client.query('SELECT COUNT(*) as count FROM prizes');
        
        console.log(`üë• –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π: ${userCount.rows[0].count}`);
        console.log(`üéÅ –ü—Ä–∏–∑–æ–≤: ${prizesCount.rows[0].count}`);

        // –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø–µ—Ä–≤—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
        console.log('\nüë§ –ü–µ—Ä–≤—ã–µ 3 –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è:');
        const firstUsers = await client.query('SELECT id, telegram_id, first_name, join_date FROM users ORDER BY id LIMIT 3');
        console.table(firstUsers.rows);

        // –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø–æ—Å–ª–µ–¥–Ω–∏—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
        console.log('\nüë§ –ü–æ—Å–ª–µ–¥–Ω–∏–µ 3 –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è:');
        const lastUsers = await client.query('SELECT id, telegram_id, first_name, join_date FROM users ORDER BY id DESC LIMIT 3');
        console.table(lastUsers.rows);

        // –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø–µ—Ä–≤—ã–µ –ø—Ä–∏–∑—ã
        console.log('\nüéÅ –ü–µ—Ä–≤—ã–µ 3 –ø—Ä–∏–∑–∞:');
        const firstPrizes = await client.query('SELECT id, user_id, type, description, created_at FROM prizes ORDER BY id LIMIT 3');
        console.table(firstPrizes.rows);

    } catch (error) {
        console.error('‚ùå –û—à–∏–±–∫–∞:', error.message);
    } finally {
        await client.end();
        console.log('\nüîå –°–æ–µ–¥–∏–Ω–µ–Ω–∏–µ –∑–∞–∫—Ä—ã—Ç–æ');
    }
}

checkDatabase();